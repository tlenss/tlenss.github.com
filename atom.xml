<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Thijs Lensselink's Blog]]></title>
  <link href="http://blog.lenss.nl/atom.xml" rel="self"/>
  <link href="http://blog.lenss.nl/"/>
  <updated>2015-02-27T12:05:53+01:00</updated>
  <id>http://blog.lenss.nl/</id>
  <author>
    <name><![CDATA[Thijs Lensselink]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Run Composer on Git clone]]></title>
    <link href="http://blog.lenss.nl/2015/02/composer-install-on-git-clone/"/>
    <updated>2015-02-27T12:46:22+01:00</updated>
    <id>http://blog.lenss.nl/2015/02/composer-install-on-git-clone</id>
    <content type="html"><![CDATA[<p>I work on a couple of projects that use <a href="https://getcomposer.org/">Composer</a> to manage the dependencies. And a coworker asked if it was possible to automate running <code>composer install</code> after cloning a repo. It sounded like a good idea. As i sometimes forget to run the command myself. So did some research. And it turned out to be quite easy.</p>

<p>To makee this work we will be using <a href="http://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks">Git hooks</a> together with Git templates.</p>

<p>So we start by creating a templates folder for git. Where does not matter.</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ mkdir -p [full path]/git-templates/hooks
</pre></div>
</div>
 </figure></notextile></div>

<p>When that’s done. we need to tell git to use the template folder on each clone / checkout. We can do this by setting a global alias for clone</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ git config --global alias.clone 'clone --template=[full path]/git-templates'
</pre></div>
</div>
 </figure></notextile></div>

<p>You can also do this by manually editing the .gitconfig file</p>

<blockquote><p>[alias]<br />	clone = clone &#8211;template=[full path]/git-templates</p></blockquote>

<p>So now we have a template folder that’s read on every clone / checkout. We only need to create the hook script that triggers composer.</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ vi [full path]/hooks/post-checkout
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header" style="margin-bottom:-5px;"><span>redirect </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre>
#! /bin/bash
# Check if a composer.json file is present
function composer_run() {
    REPO=$(readlink -m $(dirname .))
    if [ -f $REPO/composer.json ]; then
        composer install
    fi
}

composer_run
</pre></div>
</div>
 </figure></notextile></div>

<p>Finally wer need to make it executable</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ chmod +x [full path]/hooks/post-checkout
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ git clone git@github.host.tld:user/composer-hook.git foo
</pre></div>
</div>
 </figure></notextile></div>

<blockquote><p>Cloning into foo&#8230;<br />remote: Counting objects: 21, done.<br />remote: Compressing objects: 100% (15/15), done.<br />remote: Total 21 (delta 5), reused 14 (delta 1)<br />Receiving objects: 100% (21/21), done.<br />Resolving deltas: 100% (5/5), done.<br />Loading composer repositories with package information<br />Installing dependencies (including require-dev)<br />  - Installing psr/log (1.0.0)<br />    Loading from cache</p><p>  - Installing monolog/monolog (1.12.0)<br />    Loading from cache</p><p>&#8230;</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress blog hijacked]]></title>
    <link href="http://blog.lenss.nl/2015/02/octopress-blog-hijacked-by-javascript/"/>
    <updated>2015-02-06T15:46:53+01:00</updated>
    <id>http://blog.lenss.nl/2015/02/octopress-blog-hijacked-by-javascript</id>
    <content type="html"><![CDATA[<p>I use <a href="http://octopress.org/">Octopress</a> to write and generate my blog. Which works pretty well most of the time. The main benefit is having a statically generated website. No database connections no code overhead. Just plain and simple text. You’d pretty much have to 0wn the server to get to the files.</p>

<p>To my surprise though my blog was redirecting to http://octophile.com when i check my blog status today. That was pretty weird. So the first thing i did was check my commit logs. No changes. <a href="https://github.com/">Github</a> didn’t get owned (at least not publicly known). So what could be redirecting my site?</p>

<p>So i grepped for the domain name i was redirected to.</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ grep -r 'octophile' *
</pre></div>
</div>
 </figure></notextile></div>

<p>All generated pages had a call to <a href="http://octophile.com/widgets.js">http://octophile.com/widgets.js</a>. This came from the main layout template. And was there from the start. So what was it for. I just couldn’t remember. But a quick Google search turned up the Github <a href="https://github.com/mdellanoce/octophile">project</a> page. It’s the twitter widget i used for a while. Still weird though. So let’s check the contents of the widget.js file</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header" style="margin-bottom:-5px;"><span>redirect </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre>
<span class="keyword">var</span> redir_url = <span class="string"><span class="delimiter">'</span><span class="content">http://octophile.com/</span><span class="delimiter">'</span></span>; <span class="keyword">if</span> (window != top) { top.location.href = redir_url; } <span class="keyword">else</span> { window.location = redir_url; }
</pre></div>
</div>
 </figure></notextile></div>

<p>OK that explains the redirect. Now let’s take a look the WHOIS data for the octophile domain</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
   Domain Name: OCTOPHILE.COM
   Registrar: DOMAINTIMEMACHINE.COM LLC
   Sponsoring Registrar IANA ID: 1200
   Whois Server: whois.domaintimemachine.com
   Referral URL: http://www.networksolutions.com
   Name Server: 70222-NS1.NDOVERDRIVE.COM
   Name Server: 70222-NS2.NDOVERDRIVE.COM
   Status: clientTransferProhibited http://www.icann.org/epp#clientTransferProhibited
   Updated Date: 05-feb-2015
   Creation Date: 30-jan-2014
   Expiration Date: 30-jan-2016
</pre></div>
</div>
 </figure></notextile></div>

<p>So the DNS was changed yesterday. It might be somebody hijacked the domain. But i’m not sure. Maybe the project is just discontinued. Whatever it is. It was fun to figure out what was going on. I contacted the owner of the widget. But haven’t received a reply yet.</p>

<p><strong>UPDATE</strong></p>

<p>I got a quick response from the project owner. He stopped working on it a long time ago. And i probably should have cleaned up my templates. Good thing no evil javascript was injected :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using the hub in Github - pull requests]]></title>
    <link href="http://blog.lenss.nl/2015/01/using-the-hub-in-github-pull-requests/"/>
    <updated>2015-01-15T11:46:23+01:00</updated>
    <id>http://blog.lenss.nl/2015/01/using-the-hub-in-github-pull-requests</id>
    <content type="html"><![CDATA[<p>Hub is a command line tool that wraps around the <a href="https://github.com">git</a> command. It add’s some cool features that make working with git easier. The goal of this post is to show how easy it is to generate a pull request. But i’ll also quickly explain how to install <a href="https://github.com/github/hub">hub</a> itself.</p>

<p>Hub is written in <a href="https://golang.org/">Go</a>! So we need to install this to get started. You can download the latest package/source <a href="https://golang.org/dl/">here</a></p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ sudo tar -C /usr/local -xzf go$VERSION.$OS-$ARCH.tar.gz
$ vi ~/.bashrc
</pre></div>
</div>
 </figure></notextile></div>

<blockquote><p>export PATH=$PATH:/usr/local/go/bin</p></blockquote>

<p>With that in place we can setup hub</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ git clone https://github.com/github/hub.git
$ cd hub
$ ./script/build
$ cp hub /usr/local/bin
$ hub --version
</pre></div>
</div>
 </figure></notextile></div>

<blockquote><p>git version 1.9.1<br />hub version 2.2.0-rc1-13-g111100c</p></blockquote>

<p>If you are used to the git command like me. It might be a good idea to setup a alias for hub</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ vi ~/.bashrc
</pre></div>
</div>
 </figure></notextile></div>

<blockquote><p>alias git=hub</p></blockquote>

<p>One other thing i had to do because we work with the <a href="https://enterprise.github.com/">Github Enterprise Edition</a>. Is to whtelist our github host.</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ git config --global --add hub.host github.dome.domain
</pre></div>
</div>
 </figure></notextile></div>

<p>Creating a pull request with hub is as easy as using the Github web gui. We start of with creating a fork of an existing repository</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ git clone git@github.some.domain:user/FOO.git
$ cd FOO
$ git fork
</pre></div>
</div>
 </figure></notextile></div>

<p>This created the remote fork. And sets the correct remotes for the local repository</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ git remote -v
</pre></div>
</div>
 </figure></notextile></div>

<blockquote><p>origin	git@github.some.domain:user/FOO.git (fetch)<br />origin	git@github.some.domain:user/FOO.git (push)<br />me	git@github.some.domain:me/FOO.git (fetch)<br />me	git@github.some.domain:me/FOO.git (push)</p></blockquote>

<p>Before we can generate a pull request we ofcourse need some changes to push.</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ git branch bar
$ git checkout bar
$ touch BAR
$ git add BAR
$ git commit -am &quot;Add BAR&quot;
$ git push me bar
</pre></div>
</div>
 </figure></notextile></div>

<blockquote><p>Total 0 (delta 0), reused 0 (delta 0)<br />To git@github.some.domain:me/FOO.git<br /> * [new branch]      bar -&gt; bar</p></blockquote>

<p>The only thing left to do is create the actual pull-request</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ git pull-request
</pre></div>
</div>
 </figure></notextile></div>

<blockquote><p>https://github.some.domain:user/FOO/pull/1</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[View unpushed changes in git]]></title>
    <link href="http://blog.lenss.nl/2015/01/git-view-unpushed-changes/"/>
    <updated>2015-01-12T12:27:32+01:00</updated>
    <id>http://blog.lenss.nl/2015/01/git-view-unpushed-changes</id>
    <content type="html"><![CDATA[<p>When focus shifts to other projects. It might happen that some repository sits around for a while without being worked on. And if getting your forked repository synced isn’t a big enough problem. It might contain some unpushed changes. So this happened the other day at the office. </p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ git status
</pre></div>
</div>
 </figure></notextile></div>

<blockquote><p># On branch master<br /># Your branch is ahead of &#8216;origin/master&#8217; by 16 commits.<br />#<br />nothing to commit (working directory clean)</p></blockquote>

<p>Doing a simpel push would resolve the problem. But what if some changes are not needed anymore. Or some other spec changes that allow for some further inspection. So it might be a good idea to inspect the changes before we push them to remote. And thankfully git makes this quite easy. By diffing the HEAD against remote master.</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ git diff origin/master..HEAD
</pre></div>
</div>
 </figure></notextile></div>

<blockquote><p>diff &#8211;git a/path/library/init.php b/path/library/init.php<br />index 0c5ae45..50a2060 100644<br />&#8212; a/path/library/init.php<br />+++ b/path/library/init.php<br />@@ -8,13 +8,6 @@<br /> *       directory structure.<br /> */</p><p>-function FOO_library_autoloader( $classname )<br />-{<br />-    $classfile = str_replace(&#8220;_&#8221;, &#8220;/&#8221;, $classname) . &#8216;.php&#8217;;<br />-    if (file_exists(LIBRARY . $classfile))<br />-        require_once(LIBRARY. $classfile);<br />-}<br />-<br /> spl_autoload_register(&#8216;FOO_library_autoloader&#8217;);</p><p>&#8230;</p></blockquote>

<p>And voila. A diff of all unpushed changes. This also works for upstream repository’s. But the code has to fetched first. So before running the diff command. Do this</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ git fetch upstream master
$ git diff upstream/master..HEAD
</pre></div>
</div>
 </figure></notextile></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Secure cloud storage with Google and encfs on Ubuntu]]></title>
    <link href="http://blog.lenss.nl/2014/09/secure-cloud-storage-with-google-and-encfs-on-ubuntu/"/>
    <updated>2014-09-29T00:16:32+02:00</updated>
    <id>http://blog.lenss.nl/2014/09/secure-cloud-storage-with-google-and-encfs-on-ubuntu</id>
    <content type="html"><![CDATA[<p>Before we start let me say that I am not a big fan of storing private data in the cloud. And even if you do there might be better solutions to protect your data then what i will describe here.</p>

<p>I’ve chosen to use Google drive for this example. So there will be some Google drive specifics. But this should work with practically any cloud storage provider.</p>

<p>First you are going to have to have a application available that can mount your cloud storage as a local resource. I have chosen to use <a href="https://www.insynchq.com">Insync</a>. But you could use something like <a href="https://github.com/Grive/grive">Grive</a> instead. </p>

<p>Setup <a href="http://www.arg0.net/encfs">EncFS</a>:</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ sudo apt-get install encfs
</pre></div>
</div>
 </figure></notextile></div>

<p>Install a cloud sync tool:</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ sudo dpkg -i insync_1.0.32.31767-trusty_amd64.deb
</pre></div>
</div>
 </figure></notextile></div>

<p>When the initial sync is done we have all the ingredients ready. So it’s time to create some encrypted space inside the cloud container. No need to create a directory because encfs will do this as well.</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ encfs ~/[some-path]/[user]/encrypted ~/Private
</pre></div>
</div>
 </figure></notextile></div>

<p>Store the encryption key in a save place. And we are done with the encryption part. The only thing to do is setup auto mounting.</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ hg clone http://bitbucket.org/obensonne/gnome-encfs
$ cd gnome-encfs
$ sudo install gnome-encfs /usr/local/bin
$ gnome-encfs -a ~/[some-path]/[user]/encrypted ~/Private
</pre></div>
</div>
 </figure></notextile></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Get the first weekday of the month in PHP]]></title>
    <link href="http://blog.lenss.nl/2013/11/first-weekday-of-month-in-php/"/>
    <updated>2013-11-15T11:05:53+01:00</updated>
    <id>http://blog.lenss.nl/2013/11/first-weekday-of-month-in-php</id>
    <content type="html"><![CDATA[<p>A simple method to return the first weekdsay of a given month and year</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header" style="margin-bottom:-5px;"><span>getFirstWeekdayInMonth </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre>
<span class="keyword">private</span> <span class="keyword">function</span> <span class="function">_getFirstWeekdayInMonth</span>(<span class="local-variable">$month</span>, <span class="local-variable">$year</span>, <span class="local-variable">$day</span> = <span class="integer">1</span>) 
{
    <span class="local-variable">$dateData</span> = <span class="predefined">getdate</span>(<span class="predefined">mktime</span>(<span class="predefined-constant">null</span>, <span class="predefined-constant">null</span>, <span class="predefined-constant">null</span>, <span class="local-variable">$month</span>, <span class="local-variable">$day</span>, <span class="local-variable">$year</span>));
    <span class="keyword">if</span> (<span class="predefined">in_array</span>(<span class="local-variable">$dateData</span>[<span class="string"><span class="delimiter">'</span><span class="content">wday</span><span class="delimiter">'</span></span>], <span class="predefined">range</span>(<span class="integer">1</span>, <span class="integer">5</span>))) {
        <span class="keyword">return</span> <span class="local-variable">$dateData</span>[<span class="string"><span class="delimiter">'</span><span class="content">mday</span><span class="delimiter">'</span></span>];
    }
    <span class="keyword">return</span> <span class="local-variable">$this</span>-&gt;_getFirstWeekdayInMonth(<span class="local-variable">$month</span>, <span class="local-variable">$year</span>, (<span class="local-variable">$day</span>+<span class="integer">1</span>));
}

<span class="local-variable">$wday</span> = <span class="local-variable">$this</span>-&gt;_getFirstWeekdayInMonth(<span class="integer">11</span>, <span class="integer">2013</span>);
</pre></div>
</div>
 </figure></notextile></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Renaming a folder in git that contains submodules]]></title>
    <link href="http://blog.lenss.nl/2013/10/git-move-folder-containing-submodules/"/>
    <updated>2013-10-23T13:05:12+02:00</updated>
    <id>http://blog.lenss.nl/2013/10/git-move-folder-containing-submodules</id>
    <content type="html"><![CDATA[<p>Because of some project structure changes. It was required to renamed some folders. In git this should be as easy as running <strong>git mv</strong>. But when the folders you are trying to move contain submodules. Its a whole different story.</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ git mv old/ new
</pre></div>
</div>
 </figure></notextile></div>

<blockquote><p>fatal: source directory is empty, source=old/cookbooks/apache2, destination=new/cookbooks/apache2</p></blockquote>

<p>Like i said. This seems to work for normal folders. But submodules are a bit more complicated because of paths set in various files. So let’s try just moving them on the filesystem.</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ mv old/ new
$ git status
</pre></div>
</div>
 </figure></notextile></div>

<blockquote><p>#	deleted:    old/VVagrantfile.example<br />#	deleted:    old/cookbooks/apache2<br />#	deleted:    old/cookbooks/apt<br />#	deleted:    old/cookbooks/beanstalkd/.travis.yml</p></blockquote>

<p>That’s not what we’re looking for. We want to move the files. Not remove them. At this point i was at a loss and spend some time looking around <a href="http://stackoverflow.com/">stackoverflow</a>. Which has multiple solutions available from other developers. But none seemed to fit the bill. So i ended up combining a couple.</p>

<p>First create the new location and add it to the git index.</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ mkdir new
$ git add new
</pre></div>
</div>
 </figure></notextile></div>

<p>In my case i had normal folders and submodules in the same directory. So first i moved the normal folders to the new structure.</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ git mv old/[some folder] /new
</pre></div>
</div>
 </figure></notextile></div>

<p>Now it’s time for the submodules. We need to update the paths in each submodule’s <strong>.git</strong> file. And the paths in project <strong>.gitmodule</strong> file</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ find . -name .git -type f -print0 -type f | xargs -0 sed -i 's|old|new|g'
$ find . -name .gitmodule -type f -print0 -type f | xargs -0 sed -i 's|old|new|g'
</pre></div>
</div>
 </figure></notextile></div>

<p>After that add the <strong>.gitmodule</strong> file to the git index and checkout the status</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ git add .gitmodule
$ git status 
</pre></div>
</div>
 </figure></notextile></div>

<blockquote><p>fatal: Could not chdir to &#8216;../../../../../new/cookbooks/apache2&#8217;: No such file or directory<br />fatal: &#8216;git status &#8211;porcelain&#8217; failed in submodule old/cookbooks/apache2</p></blockquote>

<p>So we’re not there yet. As it turns out the git config file also contains the submodule paths. And the <strong>.git/modules</strong> folder contains a submodule mapping as well. So let’s fix that</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ find . -name config -print0 -type f | xargs -0 sed -i 's|old|new|g'
$ mv .git/modules/old .git/modules/new
$ git status
</pre></div>
</div>
 </figure></notextile></div>

<p>That looks good</p>

<blockquote><p>modified:   .gitmodules<br />#	renamed:    old/Vagrantfile.example -&gt; new/Vagrantfile.example<br />#	renamed:    old/cookbooks/apache2 -&gt; new/cookbooks/apache2<br />#	renamed:    old/cookbooks/apt -&gt; new/cookbooks/apt<br />#	renamed:    old/cookbooks/beanstalkd/.travis.yml -&gt; new/cookbooks/beanstalkd/.travis.yml</p></blockquote>

<p>Now we can remove the old folder from the git project and commit the changes.</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ git rm -r --cached old/
$ git commit -a -m &quot;Moved old to new folder&quot;
$ git push
</pre></div>
</div>
 </figure></notextile></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fixing the clover forcast for PHP projects in Jenkins]]></title>
    <link href="http://blog.lenss.nl/2013/10/clover-forcast-for-php-in-jenkins/"/>
    <updated>2013-10-15T12:26:23+02:00</updated>
    <id>http://blog.lenss.nl/2013/10/clover-forcast-for-php-in-jenkins</id>
    <content type="html"><![CDATA[<p>I had the opportunity to play with <a href="http://jenkins-ci.org/">Jenkins</a> again last week. And the setup for our projects went pretty smooth. But the fact that no matter what i tried. The <a href="https://wiki.jenkins-ci.org/display/JENKINS/Clover+PHP+Plugin">clover</a> forecast icon would always show up as rainy <a href="http://blog.lenss.nl/images/20013/10/health-20to39.png"><img src="http://blog.lenss.nl/images/2013/10/health-20to39.png" alt="" /></a>. While the build was succeeding without issues. So i spend some time googling and trying out multiple “fixes”. Of which none seemed to actually work. I even reverted back to using the Jenkins clover plugins instead of Clover for PHP. No difference at all.</p>

<p>It seemed as if the settings from the config page were completely ignored when calculating the clover status. This was really bugging me. So i checked out the clover plugin source from <a href="https://github.com/jenkinsci/cloverphp-plugin">github</a>. And browsed through the code for a while. When i found the beauty below inside <strong>CoverageTarget.java</strong></p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
<span class="directive">public</span> <span class="predefined-type">Set</span>&lt;CoverageMetric&gt; getFailingMetrics(AbstractClassMetrics coverage) {
    <span class="predefined-type">Set</span>&lt;CoverageMetric&gt; result = <span class="keyword">new</span> <span class="predefined-type">HashSet</span>&lt;CoverageMetric&gt;();

    <span class="keyword">if</span> (methodCoverage != <span class="predefined-constant">null</span> &amp;&amp; coverage.getMethodCoverage().getPercentage() &lt; methodCoverage) {
        result.add(CoverageMetric.METHOD);
    }

    <span class="keyword">if</span> (statementCoverage != <span class="predefined-constant">null</span> &amp;&amp; coverage.getStatementCoverage().getPercentage() &lt; statementCoverage) {
        result.add(CoverageMetric.STATEMENT);
    }

    <span class="keyword">if</span> (elementCoverage != <span class="predefined-constant">null</span> &amp;&amp; coverage.getElementCoverage().getPercentage() &lt; elementCoverage) {
        result.add(CoverageMetric.ELEMENT);
    }

    <span class="keyword">return</span> result;
}
</pre></div>
</div>
 </figure></notextile></div>

<p>So it seems as if somewhere in the plugin it’s actually calculating the average of the coverage per setting. The strange thing in the method above however is the <strong>elementCoverage</strong> setting. Which is not available in the Jenkins config interface. And causes issues because we have no influence over this setting.</p>

<p>So i added the setting to the config manually</p>

<blockquote><p>$ vi /var/lib/jenkins/jobs/[project]/config.xml</p></blockquote>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
<span class="tag">&lt;org.jenkinsci.plugins.cloverphp.CloverPHPPublisher</span> <span class="attribute-name">plugin</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">cloverphp@0.3.3</span><span class="delimiter">&quot;</span></span><span class="tag">&gt;</span>
...
      <span class="tag">&lt;healthyTarget&gt;</span>
        <span class="tag">&lt;methodCoverage&gt;</span>20<span class="tag">&lt;/methodCoverage&gt;</span>
        <span class="tag">&lt;statementCoverage&gt;</span>20<span class="tag">&lt;/statementCoverage&gt;</span>
        <span class="tag">&lt;elementCoverage&gt;</span>20<span class="tag">&lt;/elementCoverage&gt;</span>
      <span class="tag">&lt;/healthyTarget&gt;</span>
...
<span class="tag">&lt;/org.jenkinsci.plugins.cloverphp.CloverPHPPublisher&gt;</span>
</pre></div>
</div>
 </figure></notextile></div>

<p>And voilà. I nice sunny <a href="http://blog.lenss.nl/images/20013/10/health-80plus.png"><img src="http://blog.lenss.nl/images/2013/10/health-80plus.png" alt="" /></a> forecast. Now let’s see if i have some time to write a patch for this.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Github, SSH and multiple repositories]]></title>
    <link href="http://blog.lenss.nl/2013/08/github-and-multiple-ssh-keys/"/>
    <updated>2013-08-22T00:02:09+02:00</updated>
    <id>http://blog.lenss.nl/2013/08/github-and-multiple-ssh-keys</id>
    <content type="html"><![CDATA[<p>When working with <a href="http://github.com">Github</a>. Setting up SSH key based authentication is easy. You just create a key. Add the public key in the admin panel and voilà. If a new contributor joins your team. You add his / her key and they also have access.</p>

<p>But how does it work when you have need access to multiple repositories using multiple keys yourself? I had to set this up a couple of times. And it turns out to be just as easy. But if for some reason it’s not that obvious these steps might help.</p>

<p>Let’s pretend we need some key first.</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ ssh-keygen -t rsa -b 4096
</pre></div>
</div>
 </figure></notextile></div>

<blockquote><p>Generating public/private rsa key pair.<br />Enter file in which to save the key (/home/user/.ssh/id_rsa): repo1_rsa<br />Enter passphrase (empty for no passphrase):<br />Enter same passphrase again:</p><p>Your identification has been saved in repo1_rsa.<br />Your public key has been saved in repo1_rsa.pub.<br />The key fingerprint is:<br />03:b5:da:08:3b:6f:9a:29:3f:f5:4c:ee:5d:14:cb:41 user@host<br />The key&#8217;s randomart image is:<br />+&#8211;[ RSA 4096]&#8212;-+<br />   some output<br />+&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;+</p></blockquote>

<p>This will generate the public and private key for <strong>repo1</strong>. Now repeat the same thing for <strong>repo2</strong>. Make sure the keys reside in <strong>~/.ssh</strong></p>

<p>Now let’s say we have access to two repositories under two different users / companies. We will use <strong>github.com/repo1</strong> and <strong>github.com/repo2</strong> as examples. The only thing we have to do is add some entries to <strong>~/.ssh/config</strong> to make this work. They key is to use the Github sub-domain mappings</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ vi ~/.ssh/config
</pre></div>
</div>
 </figure></notextile></div>

<blockquote><p>Host&nbsp;&nbsp;&nbsp;&nbsp;repo1.github.com<br />&nbsp;&nbsp;&nbsp;&nbsp;HostName github.com<br />&nbsp;&nbsp;&nbsp;&nbsp;PreferredAuthentications publickey<br />&nbsp;&nbsp;&nbsp;&nbsp;IdentityFile	~/.ssh/repo1_rsa</p><p>Host&nbsp;&nbsp;&nbsp;&nbsp;repo2.github.com<br />&nbsp;&nbsp;&nbsp;&nbsp;HostName github.com<br />&nbsp;&nbsp;&nbsp;&nbsp;PreferredAuthentications publickey<br />&nbsp;&nbsp;&nbsp;&nbsp;IdentityFile	~/.ssh/repo2_rsa</p></blockquote>

<p>Save the file and we’re done. Now to checkout a project in one of the repositories. Do the following.</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
$ git clone git@repo1.github.com:repo1/project.git
</pre></div>
</div>
 </figure></notextile></div>

<blockquote><p>Cloning into &#8216;project&#8217;&#8230;<br />remote: Counting objects: 86, done.<br />remote: Compressing objects: 100% (66/66), done.<br />remote: Total 86 (delta 27), reused 64 (delta 17)<br />Receiving objects: 100% (86/86), 34.83 KiB, done.<br />Resolving deltas: 100% (27/27), done.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Memory exhaust issue PHP and APM]]></title>
    <link href="http://blog.lenss.nl/2013/07/memory-exhaust-issue-PHP-and-APM/"/>
    <updated>2013-07-03T11:57:43+02:00</updated>
    <id>http://blog.lenss.nl/2013/07/memory-exhaust-issue-PHP-and-APM</id>
    <content type="html"><![CDATA[<p>A while back i wrote a small data aggregator that would do some background processing and populate a database with it’s calculated results. The main reason to implement this was that running the queries in real-time on the production server was causing memory exhaust issues. Once the new feature was done and deployed. We quickly noticed we were running into the same kind of issues again. And the script would halt almost each time it was executed.</p>

<blockquote><p>Fatal error: Allowed memory size of xxxxxxxxx bytes exhausted (tried toallocate xxxxx bytes) in</p></blockquote>

<p>After some hacking and optimization tricks. The script’s memory consumption seemed stable enough to deploy it to production. However. Each time we deployed it. We were hit by memory exhaust issues almost instantly. Time to do some debugging and code tracing.</p>

<p>And we’re able to narrow it down to a single mysql<em>* (don’t get me started on the mysql</em>* functions, so let’s ignore that for now) call. Namely  <a href="http://php.net/manual/en/function.mysql-fetch-field.php">mysql_fetch_field</a>. Why on earth would this generate a memory exhaust issue on the server you might think. And that’s exactly what we were thinking. </p>

<p>The problem was. That the offset passed in as the field offset was incorrect. And resulted in a notice. These notices however were suppressed with the @ symbol. And therefor never noticeable during development. But that’s no reason for memory exhaust issues… right?</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
@mysql_fetch_field($result, $offset);
</pre></div>
</div>
 </figure></notextile></div>

<p>Right! Further inspection showed that in production PHP’s <a href="http://code.google.com/p/peclapm/">APM</a> extension was loaded and active. And this was the real problem behind the memory exhaust issue. Thousands of queries were executed. And almost all of them were throwing an error notice for the fetch field function. Which was ignored by the @ symbol. But APM was still logging them. And apparently had a very hard time keeping up. </p>

<p>It looks like a bug in APM. But that’s another story. The issue was fixed by passing in the correct offset of course. Another nice example of logging bringing down a production server.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP 5.5.0 released]]></title>
    <link href="http://blog.lenss.nl/2013/06/php-55-released/"/>
    <updated>2013-06-22T21:56:12+02:00</updated>
    <id>http://blog.lenss.nl/2013/06/php-55-released</id>
    <content type="html"><![CDATA[<p>PHP reached a new milestone 3 days ago. And as always it’s quite exciting news. Some of the new features are already outlined by Evert Pot’s post which you can find <a href="http://evertpot.com/php-55-released/">here</a>. And all of this of course can be found on the <a href="https://wiki.php.net/rfc">wiki</a> and in the <a href="http://php.net/ChangeLog-5.php#5.5.0">change log</a>. </p>

<p>I’ll just outline some of the new and exiting features, deprecated notices and removed functions.</p>

<p><strong><em>Simplified password hashing API</em></strong></p>

<p>Hashing passwords with <a href="http://php.net/manual/en/function.md5.php">md5()</a> and <a href="http://php.net/manual/en/function.sha1.php">sha1()</a> just isn’t enough anymore. So a new, secure and easy way to hash passwords has been added. And besides hashing includes some other useful functions.</p>

<p><strong><em>$password</em></strong> The password string to hash</p>

<p><strong><em>$algorithm</em></strong> The hashing algorithm to use of which two are available at the moment</p>

<blockquote><p>PASSWORD_DEFAULT which uses bcrypt<br />PASSWORD_BCRYPT which uses blowfish</p></blockquote>

<p><strong><em>$options</em></strong> makes it possible to add a salt or set the cost for the hashing algorithm</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header" style="margin-bottom:-5px;"><span>Hash password with default algorithm</span><a href="http://php.net/manual/en/function.password-hash.php">password_hash() </a></figcaption> <div class="CodeRay">
  <div class="code"><pre>
<span class="local-variable">$password</span> = <span class="string"><span class="delimiter">'</span><span class="content">test-password</span><span class="delimiter">'</span></span>;
<span class="local-variable">$hash</span> = password_hash(<span class="local-variable">$password</span>, <span class="constant">PASSWORD_DEFAULT</span>);
<span class="predefined">var_dump</span>(<span class="local-variable">$hash</span>);
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
string(60) &quot;$2y$10$qGv1q5nT4F7HCtKSPPME2usrdJRcRpk9lEUMQsE8mqyDIy3fbJ4I.&quot;
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header" style="margin-bottom:-5px;"><span>Hash password with BLOWFISH algorithm</span><a href="http://php.net/manual/en/function.password-hash.php">password_hash() </a></figcaption> <div class="CodeRay">
  <div class="code"><pre>
<span class="local-variable">$hash</span> = password_hash(<span class="local-variable">$password</span>, <span class="constant">PASSWORD_BCRYPT</span>);
<span class="predefined">var_dump</span>(<span class="local-variable">$hash</span>);
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
string(60) &quot;$2y$10$XtpNO/tFjtkq4u3ghcpqXeSwbHZxDQDTXRHfWBnZsmowUVl/MQys2&quot;
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header" style="margin-bottom:-5px;"><span>Hash password with BLOWFISH algorithm and options</span><a href="http://php.net/manual/en/function.password-hash.php">password_hash() </a></figcaption> <div class="CodeRay">
  <div class="code"><pre>
<span class="local-variable">$salt</span> = mcrypt_create_iv(<span class="integer">22</span>, <span class="constant">MCRYPT_DEV_URANDOM</span>); 
<span class="local-variable">$hash</span> = password_hash(<span class="local-variable">$password</span>, <span class="constant">PASSWORD_BCRYPT</span>, <span class="predefined">array</span>(<span class="string"><span class="delimiter">&quot;</span><span class="content">cost</span><span class="delimiter">&quot;</span></span> =&gt; <span class="integer">14</span>, <span class="string"><span class="delimiter">&quot;</span><span class="content">salt</span><span class="delimiter">&quot;</span></span> =&gt; <span class="local-variable">$salt</span>));
<span class="predefined">var_dump</span>(<span class="local-variable">$hash</span>);
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
string(60) &quot;$2y$14$6ZtnYJ0CyqCUx.vJu3MZEuUGgIN.ryxMa0Yh8BnCrbBDVnd3Me30i&quot;
</pre></div>
</div>
 </figure></notextile></div>

<p>Verify if a hash and password match. Return true if they do and false if they don’t</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header" style="margin-bottom:-5px;"><span>Verify hash</span><a href="http://php.net/manual/en/function.password-verify.php">password_verify() </a></figcaption> <div class="CodeRay">
  <div class="code"><pre>
<span class="local-variable">$hash</span> = password_hash(<span class="local-variable">$password</span>, <span class="constant">PASSWORD_DEFAULT</span>);

<span class="keyword">if</span> (password_verify(<span class="local-variable">$password</span>, <span class="local-variable">$hash</span>)) {
  <span class="predefined">echo</span> <span class="string"><span class="delimiter">'</span><span class="content">Password is correct</span><span class="delimiter">'</span></span>;
} <span class="keyword">else</span> {
  <span class="predefined">echo</span> <span class="string"><span class="delimiter">'</span><span class="content">Password is incorrect</span><span class="delimiter">'</span></span>;
}
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
Password is correct
</pre></div>
</div>
 </figure></notextile></div>

<p>Get information about a valid hash created with password_hash(). The function returns an array with the use d algorithm and options</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header" style="margin-bottom:-5px;"><span>Retrieve $hash information</span><a href="http://php.net/manual/en/function.password-get-info.php">password_get_info() </a></figcaption> <div class="CodeRay">
  <div class="code"><pre>
<span class="local-variable">$info</span> = password_get_info(<span class="local-variable">$hash</span>);
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
array(3) {
  [&quot;algo&quot;]=&gt;
  int(1)
  [&quot;algoName&quot;]=&gt;
  string(6) &quot;bcrypt&quot;
  [&quot;options&quot;]=&gt;
  array(1) {
    [&quot;cost&quot;]=&gt;
    int(10)
  }
}
</pre></div>
</div>
 </figure></notextile></div>

<p>Check if the supplied hash was generated by the provided algorithm and options. This might come in handy when the hash needs to be updated</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header" style="margin-bottom:-5px;"><span>Check if a $hash needs to be rehashed</span><a href="http://php.net/manual/en/function.password-needs-rehash.php">password_needs_rehash() </a></figcaption> <div class="CodeRay">
  <div class="code"><pre>
<span class="keyword">if</span> (password_needs_rehash(<span class="local-variable">$hash</span>, <span class="constant">PASSWORD_BCRYPT</span>, <span class="predefined">array</span>(<span class="string"><span class="delimiter">'</span><span class="content">cost</span><span class="delimiter">'</span></span> =&gt; <span class="integer">8</span>))) {
  <span class="comment">// Update the password hash</span>
}
</pre></div>
</div>
 </figure></notextile></div>

<p><strong><em>Support for constant array/string dereferencing</em></strong></p>

<p>If you work with objects you might have worked with object dereferencing. This Is used to chain method calls. Or the so called fluent interfaces</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header" style="margin-bottom:-5px;"><span>Dereference object call </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre>
<span class="local-variable">$obj</span>-&gt;method()-&gt;returnObjMethod();
</pre></div>
</div>
 </figure></notextile></div>

<p>Now the same is possible for arrays and strings</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header" style="margin-bottom:-5px;"><span>Dereference strings / array </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre>
<span class="predefined">echo</span> <span class="predefined">array</span>(<span class="integer">1</span>, <span class="integer">2</span>, <span class="integer">3</span>)[<span class="integer">0</span>]; <span class="comment">//output 1</span>
<span class="predefined">echo</span> <span class="string"><span class="delimiter">&quot;</span><span class="content">foobar</span><span class="delimiter">&quot;</span></span>[<span class="integer">2</span>]; <span class="comment">//output o</span>
<span class="predefined">echo</span> <span class="string"><span class="delimiter">&quot;</span><span class="content">foobar</span><span class="delimiter">&quot;</span></span>[<span class="string"><span class="delimiter">&quot;</span><span class="content">foo</span><span class="delimiter">&quot;</span></span>][<span class="integer">0</span>] <span class="comment">// output f</span>
 
<span class="predefined">echo</span> [<span class="integer">1</span>,<span class="integer">3</span>,<span class="integer">4</span>][<span class="integer">2</span>]; <span class="comment">//output 4</span>
</pre></div>
</div>
 </figure></notextile></div>

<p><strong><em>Class Name Resolution As Scalar Via “class” Keyword</em></strong></p>

<p>An easy way to get the full class name </p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header" style="margin-bottom:-5px;"><span>Class name resolution via ::class </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre>
<span class="keyword">namespace</span> <span class="constant">Vodka</span>\<span class="predefined">Crypt</span>;

<span class="keyword">Class</span> <span class="constant">HashBuilder</span> {}

<span class="keyword">use</span> <span class="constant">Vodka</span>\<span class="predefined">Crypt</span>\<span class="constant">HashBuilder</span>;
         
<span class="predefined">var_dump</span>(<span class="constant">HashBuilder</span>::<span class="keyword">class</span>);
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
string(23) &quot;Vodka\Crypt\HashBuilder&quot;
</pre></div>
</div>
 </figure></notextile></div>

<p><strong><em>Support for using empty() on the result of function calls and other expressions</em></strong></p>

<p>Normally <a href="http://php.net/manual/en/function.empty.php">empty()</a> and <a href="http://php.net/manual/en/function.isset.php">isset()</a> could only be used on variables. In 5.5 it’s possible to test expression and return values from functions</p>

<p><strong><em>5.3</em></strong></p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header" style="margin-bottom:-5px;"><span>Call empty() with closure </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre>
<span class="predefined">var_dump</span>( <span class="predefined">empty</span>(<span class="keyword">function</span>() {}) );
</pre></div>
</div>
 </figure></notextile></div>

<blockquote><p>PHP Parse error:  syntax error, unexpected T_FUNCTION in</p></blockquote>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header" style="margin-bottom:-5px;"><span>Call empty() with function return value </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre>        
<span class="keyword">function</span> <span class="function">foo</span>() {}
<span class="predefined">var_dump</span>(<span class="predefined">empty</span>(foo()));
</pre></div>
</div>
 </figure></notextile></div>

<blockquote><p>PHP Fatal error:  Can&#8217;t use function return value in write context in</p></blockquote>

<p><strong><em>5.5</em></strong></p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header" style="margin-bottom:-5px;"><span>Call empty() with function return value </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre>
<span class="keyword">function</span> <span class="function">foo</span>(<span class="local-variable">$val</span>) { 
  <span class="keyword">return</span> <span class="local-variable">$val</span>; 
}

<span class="predefined">var_dump</span>( <span class="predefined">empty</span>(foo([])) );
<span class="predefined">var_dump</span>( <span class="predefined">empty</span>(foo(<span class="predefined-constant">true</span>)) );
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
bool(true)
bool(false)
</pre></div>
</div>
 </figure></notextile></div>

<p><strong><em>Support for list in foreach</em></strong></p>

<p>List has been added for foreach loops. Great for eliminating unused variables.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header" style="margin-bottom:-5px;"><span>Support for list in foreach </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre>
<span class="local-variable">$messages</span> = <span class="predefined">array</span>(
  <span class="predefined">array</span>(<span class="string"><span class="delimiter">'</span><span class="content">id</span><span class="delimiter">'</span></span> =&gt; <span class="integer">1</span>, <span class="string"><span class="delimiter">'</span><span class="content">body</span><span class="delimiter">'</span></span> =&gt; <span class="string"><span class="delimiter">'</span><span class="content">test-1</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content">code</span><span class="delimiter">'</span></span> =&gt; <span class="integer">12</span>),
  <span class="predefined">array</span>(<span class="string"><span class="delimiter">'</span><span class="content">id</span><span class="delimiter">'</span></span> =&gt; <span class="integer">2</span>, <span class="string"><span class="delimiter">'</span><span class="content">body</span><span class="delimiter">'</span></span> =&gt; <span class="string"><span class="delimiter">'</span><span class="content">test-2</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content">code</span><span class="delimiter">'</span></span> =&gt; <span class="integer">12</span>),
  <span class="predefined">array</span>(<span class="string"><span class="delimiter">'</span><span class="content">id</span><span class="delimiter">'</span></span> =&gt; <span class="integer">3</span>, <span class="string"><span class="delimiter">'</span><span class="content">body</span><span class="delimiter">'</span></span> =&gt; <span class="string"><span class="delimiter">'</span><span class="content">test-3</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content">code</span><span class="delimiter">'</span></span> =&gt; <span class="integer">10</span>)
);

<span class="comment">// Before</span>
<span class="keyword">foreach</span> (<span class="local-variable">$messages</span> <span class="keyword">as</span> <span class="local-variable">$message</span>) {
  <span class="predefined">list</span>(<span class="local-variable">$id</span>, <span class="local-variable">$body</span>) = <span class="local-variable">$message</span>;
}
         
<span class="comment">// After</span>
<span class="keyword">foreach</span> (<span class="local-variable">$messages</span> <span class="keyword">as</span> <span class="predefined">list</span>(<span class="local-variable">$id</span>, <span class="local-variable">$body</span>)) {}
</pre></div>
</div>
 </figure></notextile></div>

<p><strong><em>Zend Opcache extension and enable building it by default</em></strong></p>

<p>My short post about <a href="https://wiki.php.net/rfc/optimizerplus">Zend Optimizer+</a> in February this year. Kind of slipped my mind. And i was somehow under the impression <a href="http://pecl.php.net/package/APC">APC</a> would be integrated. But this of course has to be Zend Optimizer+. Finally an opcode cacher available be default. And configurable from php.ini</p>

<blockquote><p>[opcache]<br />; Determines if Zend OPCache is enabled<br />opcache.enable=0<br />opcache.enable_cli=0</p><p>; The OPcache shared memory storage size.<br />opcache.memory_consumption=64</p><p>; The amount of memory for interned strings in Mbytes.<br />opcache.interned_strings_buffer=4</p><p>; Max files in OPCode cache, use a number between 200 and 100000.<br />opcache.max_accelerated_files=2000</p><p>; The maximum percentage of &#8220;wasted&#8221; memory until a restart is scheduled.<br />opcache.max_wasted_percentage=5</p><p>; Append current working dir to script name<br />opcache.use_cwd=1</p><p>How often a file should be validated<br />opcache.revalidate_freq=2</p><p>; Enables or disables file search in include_path optimization<br />opcache.revalidate_path=0</p><p>; Drop all PHPDoc comments<br />opcache.save_comments=1</p></blockquote>

<p><strong><em>array_column function which returns a column in a multidimensional array</em></strong></p>

<p>Fetching a column from a multi-dimensional array is now possible with a single function call.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header" style="margin-bottom:-5px;"><span>Fetch a column from a multi-dimensional array</span><a href="http://php.net/manual/en/function.array-column.php">array_column() </a></figcaption> <div class="CodeRay">
  <div class="code"><pre>
<span class="local-variable">$nestedArray</span> = <span class="predefined">array</span>(
  <span class="predefined">array</span>(<span class="string"><span class="delimiter">'</span><span class="content">id</span><span class="delimiter">'</span></span> =&gt; <span class="integer">1</span>, <span class="string"><span class="delimiter">'</span><span class="content">body</span><span class="delimiter">'</span></span> =&gt; <span class="string"><span class="delimiter">'</span><span class="content">test-1</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content">code</span><span class="delimiter">'</span></span> =&gt; <span class="integer">12</span>),
  <span class="predefined">array</span>(<span class="string"><span class="delimiter">'</span><span class="content">id</span><span class="delimiter">'</span></span> =&gt; <span class="integer">2</span>, <span class="string"><span class="delimiter">'</span><span class="content">body</span><span class="delimiter">'</span></span> =&gt; <span class="string"><span class="delimiter">'</span><span class="content">test-2</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content">code</span><span class="delimiter">'</span></span> =&gt; <span class="integer">12</span>),
  <span class="predefined">array</span>(<span class="string"><span class="delimiter">'</span><span class="content">id</span><span class="delimiter">'</span></span> =&gt; <span class="integer">3</span>, <span class="string"><span class="delimiter">'</span><span class="content">body</span><span class="delimiter">'</span></span> =&gt; <span class="string"><span class="delimiter">'</span><span class="content">test-3</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content">code</span><span class="delimiter">'</span></span> =&gt; <span class="integer">10</span>)
);
<span class="local-variable">$columns</span> = array_column(<span class="local-variable">$nestedArray</span>, <span class="string"><span class="delimiter">'</span><span class="content">code</span><span class="delimiter">'</span></span>);
<span class="predefined">print_r</span>(<span class="local-variable">$columns</span>);
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
Array
(
  [0] =&gt; 12
  [1] =&gt; 12
  [2] =&gt; 10
)
</pre></div>
</div>
 </figure></notextile></div>

<p>Or fetch status code indexed by id</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header" style="margin-bottom:-5px;"><span>Fetch a column from a multi-dimensional array index by another field</span><a href="http://php.net/manual/en/function.array-column.php">array_column() </a></figcaption> <div class="CodeRay">
  <div class="code"><pre>
<span class="local-variable">$columns</span> = array_column(<span class="local-variable">$nestedArray</span>, <span class="string"><span class="delimiter">'</span><span class="content">code</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content">id</span><span class="delimiter">'</span></span>);
<span class="predefined">print_r</span>(<span class="local-variable">$columns</span>);
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
Array
(
  [145] =&gt; 12
  [20098] =&gt; 12
  [34] =&gt; 10
)
</pre></div>
</div>
 </figure></notextile></div>

<p><strong><em>deprecated</em></strong></p>

<p>The following mcrypt functions have been deprecated <a href="http://php.net/manual/en/function.mcrypt-ecb.php">mcrypt_ecb()</a>, <a href="http://php.net/manual/en/function.mcrypt-cbc.php">mcrypt_cbc()</a>, <a href="http://php.net/manual/en/function.mcrypt-cfb.php">mcrypt_cfb()</a>, <a href="http://php.net/manual/en/function.mcrypt-ofb.php">mcrypt_ofb()</a> and will now throw <a href="http://php.net/manual/en/errorfunc.constants.php">E_DEPRECATED</a>.</p>

<p>The mysql extension has finally been deprecated, and deprecation warnings will be generated when connections are established to databases via <a href="http://php.net/manual/en/function.mysql-connect.php">mysql_connect()</a>, <a href="http://php.net/manual/en/function.mysql-pconnect.php">mysql_pconnect()</a></p>

<p>use <a href="http://php.net/manual/en/book.mysqli.php">MySQLi</a> or <a href="http://php.net/manual/en/ref.pdo-mysql.php">PDO_MySQL</a> extensions instead.</p>

<p><strong><em>removed</em></strong></p>

<p>The following (not so useful) functions have been removed from the core <a href="http://php.net/manual/en/function.php-logo-guid.php">php_logo_guid()</a>, php_egg_logo_guid(), php_real_logo_guid(), <a href="http://www.php.net/manual/en/function.zend-logo-guid.php">zend_logo_guid()</a>. And support for the ancient operating systems Windows XP and 2003 has been dropped!</p>

<p><strong><em>Install 5.5 on Ubuntu (experimental)</em></strong></p>

<p>If you want to experience the new version first hand and you work on <a href="http://www.ubuntu.com/">Ubuntu</a>. You can add the experimental PPA and give it a shot.</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
sudo add-apt-repository ppa:ondrej/php5-experimental
sudo apt-get update
sudo apt-get install php5
</pre></div>
</div>
 </figure></notextile></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Casting weirdness with PHP]]></title>
    <link href="http://blog.lenss.nl/2013/03/casting-weirdness-with-PHP/"/>
    <updated>2013-03-28T22:20:34+01:00</updated>
    <id>http://blog.lenss.nl/2013/03/casting-weirdness-with-PHP</id>
    <content type="html"><![CDATA[<p>When my coworker today asked if he could cast an array to a object. I couldn’t really answer the question. Don’t think i ever done that. So let’s try. right?</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header" style="margin-bottom:-5px;"><span>Cast array to object </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre>
<span class="local-variable">$arr</span> = <span class="predefined">array</span>(<span class="string"><span class="delimiter">'</span><span class="content">foo</span><span class="delimiter">'</span></span> =&gt; <span class="string"><span class="delimiter">'</span><span class="content">baz</span><span class="delimiter">'</span></span>);
<span class="local-variable">$obj</span> = (<span class="predefined-type">object</span>) <span class="local-variable">$arr</span>;

<span class="predefined">var_dump</span>(<span class="local-variable">$obj</span>);
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
object(stdClass)#1 (1) {
  [&quot;foo&quot;]=&gt;
  string(3) &quot;baz&quot;
}
</pre></div>
</div>
 </figure></notextile></div>

<p>Ha that’s cool. It actually works. But wait. What happens when we use a numeric index?</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header" style="margin-bottom:-5px;"><span>Cast array to object </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre>
<span class="local-variable">$arr</span> = <span class="predefined">array</span>(<span class="integer">0</span> =&gt; <span class="string"><span class="delimiter">'</span><span class="content">bar</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content">foo</span><span class="delimiter">'</span></span> =&gt; <span class="string"><span class="delimiter">'</span><span class="content">baz</span><span class="delimiter">'</span></span>);
<span class="local-variable">$obj</span> = (<span class="predefined-type">object</span>) <span class="local-variable">$arr</span>;

<span class="predefined">var_dump</span>(<span class="local-variable">$obj</span>);
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
object(stdClass)#1 (2) {
  [0]=&gt;
  string(3) &quot;bar&quot;
  [&quot;foo&quot;]=&gt;
  string(3) &quot;baz&quot;
}
</pre></div>
</div>
 </figure></notextile></div>

<p>WTF? We just created <strong><em>$obj-&gt;0</em></strong> which should not be allowed in PHP as far as i know. So let’s make sure i am not mistaking.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header" style="margin-bottom:-5px;"><span>Assign value to numeric class property </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre>
<span class="local-variable">$foo</span> = <span class="keyword">new</span> <span class="predefined-constant">stdClass</span>();
<span class="local-variable">$foo</span>-&gt;<span class="integer">0</span> = <span class="string"><span class="delimiter">'</span><span class="content">bar</span><span class="delimiter">'</span></span>;
</pre></div>
</div>
 </figure></notextile></div>

<blockquote><p>PHP Parse error:  syntax error, unexpected &#8216;0&#8217; (T_LNUMBER), expecting identifier (T_STRING) or variable (T_VARIABLE) or &#8216;{&#8217; or &#8216;$&#8217; in foo.php on line 5</p></blockquote>

<p>But casting the array didn’t complain about a thing. Can we access this property? Well! Not calling it directly. At least not that i know of. But looping over the object’s properties does seem to work. </p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header" style="margin-bottom:-5px;"><span>Loop object properties </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre>
<span class="comment">// Parse error</span>
<span class="comment">// var_dump($obj-&gt;0);</span>

<span class="keyword">foreach</span> (<span class="local-variable">$obj</span> <span class="keyword">as</span> <span class="local-variable">$key</span> =&gt; <span class="local-variable">$val</span>) {
  <span class="predefined">var_dump</span>(<span class="local-variable">$key</span>);
  <span class="predefined">var_dump</span>(<span class="local-variable">$obj</span>-&gt;<span class="local-variable">$key</span>);
}
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
int(0)
PHP Notice:  Undefined property: stdClass::$0 in foo.php on line 14
NULL
string(3) &quot;foo&quot;
string(3) &quot;baz&quot;
</pre></div>
</div>
 </figure></notextile></div>

<p>It’s not that i was planning on ever using this. Or advising other people to use it. In the contrary. But i guess it’s not completely useless. But care is required when doing so.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Zend Optimizer+ integrated into 5.5]]></title>
    <link href="http://blog.lenss.nl/2013/02/zend-optimizer%2B-integrated-in-5.5/"/>
    <updated>2013-02-27T22:12:12+01:00</updated>
    <id>http://blog.lenss.nl/2013/02/zend-optimizer+-integrated-in-5.5</id>
    <content type="html"><![CDATA[<p>It looks like PHP is going to get another built in performance boost. The plan is to integrate and open source the <a href="http://files.zend.com/help/previous-version/Zend-Server-4-Community-Edition/zendoptimizerplus.html">Zend Optimizer+</a> component. The fastest Opcode cacher out there. Zend has provided the source. Which is already available on <a href="http://bit.ly/VSsqx3">github</a>. So we get the Opcode cacher to boost  out applications even more. And the community can extend and built upon the available source code. Win! Win!</p>

<p>PHP 5+ has come a long way performance wise without the Optimizer component. But being able to apply opcode cache out of the box is a great addition. And so far the <a href="http://bit.ly/116BnnB">benchmarks</a> look promising. The Optimizer+ component beats <a href="http://pecl.php.net/package/APC">APC</a> hands down in all performed tests.</p>

<p>Read more about Opcode caching and the integration process <a href="https://wiki.php.net/rfc/optimizerplus">here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHPness Serious WTF]]></title>
    <link href="http://blog.lenss.nl/2013/02/phpness-serious-wtf/"/>
    <updated>2013-02-27T11:58:26+01:00</updated>
    <id>http://blog.lenss.nl/2013/02/phpness-serious-wtf</id>
    <content type="html"><![CDATA[<p>It’s been a while since i last blogged. And i don’t really have anything new to offer. But i would like to comment on some current event. There has been some commotion about a free t shirt that was distributed on the SunshinePHP conference this year. </p>

<p><a href="http://blog.lenss.nl/images/2013/02/web-and-php-img.png"><img src="http://blog.lenss.nl/images/2013/02/web-and-php-img.png" alt="" /></a></p>

<p>The first time i saw the shirt i could not make out what was so offending that people would start blogging about it. Somebody had to point that out for me. So what’s the deal here? Apparently the shirt’s slogan was intentionally created with a slight sexual undertone. The idea comes from the enlarge your penis SPAM we all know! </p>

<p>Some people have perceived this as being sexist. And even go so far as to personally attack the people behind the shirt. </p>

<p>Personally i don’t think the shirt is sexist or offensive at all. And don’t really understand all the fuss. Sex has never been an issue for me in the PHP community. I learn just as much from female developers as i do from the male ones. We are all equal. People that feel the need to defend the opposite sex are probably the ones that see a difference. Even so! Why make such a big deal of something so small? I never seen anybody blog about the programming with attitude poster. </p>

<p><a href="http://blog.lenss.nl/images/2013/02/php-programming.jpg"><img src="http://blog.lenss.nl/images/2013/02/php-programming.jpg" alt="" /></a></p>

<p>I think the PHP community has just lost a bit of it’s shine and coolness. I’ve always been under the impression the PHP community consisted of free thinking people that do what they love. Develop stuff. And that’s exactly what attracted me to it 12 years ago in the first place.</p>

<p>The community has grown quite a lot in that period of time. The thing with every communities is that it brings forth vocal people. Which is a great thing in general. But not so good when people forget their responsibility towards the rest of the community. And that’s exactly what happened the last few days. Personal issues have become public. To me it seems many of you have missed the boat completely. You don’t have to like the shirt. But there is absolutely no reason to bash the initiative in public.</p>

<p>Here are some of the articles the spawned over the last couple days:</p>

<p><a href="http://webandphpmag.wordpress.com/2013/02/25/phpness-gate-raising-interesting-issues/">PHPness Gate – raising interesting issues</a></p>

<p><a href="http://www.brandonsavage.net/on-public-outrage-and-bad-actors/">On Public Outrage And Bad Actors</a></p>

<p><a href="http://caseysoftware.com/blog/sexism-php-community">Sexism in the PHP Community</a></p>

<p><a href="http://www.leftontheweb.com/message/On_SexismRacismAnyotherism_and_the_PHP_Community">On Sexism/Racism/Any-other-ism and the PHP Community</a></p>

<p><a href="http://blog.calevans.com/2013/02/22/sexism-and-php/">Sexism and PHP</a></p>

<p><a href="http://news.ycombinator.com/item?id=5269120">Hacker news - Sexism and PHP (calevans.com)</a></p>

<p><a href="http://www.gogolek.co.uk/blog/2013/02/web-and-php-sexist-tshirt-debate-my-2-cents/">Web &amp; PHP sexist tshirt debate – my 2 cents</a></p>

<p><a href="http://blog.ircmaxell.com/2013/02/on-equality-sexism-and-even-hand.html">On Equality, Sexism and an Even Hand</a></p>

<p>So let’s all just respect one another. And keep the PHP community a friendly place. This kind of nonsense has no positive impact on anybody.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Publish Google Reader shared items]]></title>
    <link href="http://blog.lenss.nl/2012/11/publish-google-reader-shared-items/"/>
    <updated>2012-11-07T15:55:26+01:00</updated>
    <id>http://blog.lenss.nl/2012/11/publish-google-reader-shared-items</id>
    <content type="html"><![CDATA[<p>A lot of people are using the shared items feature in <a href="http://www.google.nl/reader/">Google Reader</a> to publish what they are reading on a blog. It’s like having a live blogroll widget on your website. And gives your readers a good impression of what you are actually interested in.</p>

<p>I never bothered adding this to my blog. But i do like to share. So last night i was trying to figure out how to integrate this with my current blog. I was hoping for an easy implementation. But the information is scarce. So i had to do some digging. I did find a couple of <a href="https://www.google.nl/search?q=wordpress+plugin+google+reader">Wordpress plugins</a>. But most of them were not updated for at least a year. And i am not putting code like that life on my website. </p>

<p>After some Googling i came across a couple of feed URL’s that seem to share their <strong>shared</strong> items in feed form. Using the Google Reader URL and a user id. So the URL for my shared items would look like the one below. Getting your user id by the way is easy. Go to your Google reader page. Click all <strong>All items</strong> and the <strong>UID</strong> will show up in the address bar.</p>

<blockquote>
  <p>http://www.google.com/reader/shared/16525759780220726764</p>
</blockquote>

<p>The problem with this however. Non of my shared posts show up on this page. And i have not figured out a way to populate it just yet. So i came up with an other path to get this data on my server.</p>

<p>In the Google Reader pages it’s possible to add sharing functionality. This is done by going to the <strong>Send To</strong> tab</p>

<p><a href="http://blog.lenss.nl/images/2012/11/Send-To.png"><img src="http://blog.lenss.nl/images/2012/11/Send-To-300x22.png" alt="" /></a></p>

<p>From here it’s possible to select a service to share data with. Non of these services are any good for what i am trying to do. But the great thing about this page is. You can provide custom URL’s for sharing data. Just incorporate the specified parameters in the URL and your done.</p>

<p><a href="http://blog.lenss.nl/images/2012/11/Custom-Site.png"><img src="http://blog.lenss.nl/images/2012/11/Custom-Site-300x178.png" alt="" /></a></p>

<p>Once configured and saved a custom URL is visible in the <strong>Send To</strong> panel</p>

<p><a href="http://blog.lenss.nl/images/2012/11/Favorite-Site.png"><img src="http://blog.lenss.nl/images/2012/11/Favorite-Site-300x125.png" alt="" /></a></p>

<p>That’s it for this part. Actually sharing items is quite easy now. When back in the Google Reader under each post there is Send to link. If you click this link the newly created custom URL will show up. And you can share the post.</p>

<p><a href="http://blog.lenss.nl/images/2012/11/Tag-Article.png"><img src="http://blog.lenss.nl/images/2012/11/Tag-Article-300x41.png" alt="" /></a></p>

<p>The only thing left to do is write some code to process the incoming data. To get you started. Some of the code i used while testing this is posted below</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header" style="margin-bottom:-5px;"><span>GoogleReaderShare class </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre>
<span class="keyword">Class</span> <span class="constant">GoogleReaderShare</span>
{
  <span class="keyword">const</span> <span class="constant">GOOGLE_REMOTE_IP</span> = <span class="string"><span class="delimiter">'</span><span class="content">95.97.54.3</span><span class="delimiter">'</span></span>;
            
  <span class="keyword">const</span> <span class="constant">GOOGLE_REFERER</span> = <span class="string"><span class="delimiter">'</span><span class="content">http://www.google.nl/reader/view/</span><span class="delimiter">'</span></span>;
            
  <span class="keyword">protected</span> <span class="keyword">static</span> <span class="local-variable">$_whitelist</span> = <span class="predefined">array</span>(<span class="string"><span class="delimiter">'</span><span class="content">source</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content">title</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content">url</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content">short</span><span class="delimiter">'</span></span>);
            
  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">function</span> <span class="function">CheckSource</span>(<span class="local-variable">$remoteAddr</span>, <span class="local-variable">$referer</span>) 
  {
    <span class="keyword">if</span> ((<span class="local-variable">$remoteAddr</span> == <span class="predefined-constant">self</span>::<span class="constant">GOOGLE_REMOTE_IP</span>) 
        &amp;&amp; (<span class="local-variable">$referer</span> == <span class="predefined-constant">self</span>::<span class="constant">GOOGLE_REFERER</span>)) {
      <span class="keyword">return</span> <span class="predefined-constant">true</span>;
    }
    <span class="keyword">return</span> <span class="predefined-constant">false</span>;
  }
            
  <span class="keyword">protected</span> <span class="keyword">static</span> <span class="keyword">function</span> <span class="function">_CheckIncomingData</span>(<span class="local-variable">$data</span>)
  {
    <span class="keyword">if</span> (!<span class="predefined">is_array</span>(<span class="local-variable">$data</span>)) {
      <span class="keyword">return</span> <span class="predefined-constant">false</span>;
    }
                            
    <span class="keyword">foreach</span> (<span class="local-variable">$data</span> <span class="keyword">as</span> <span class="local-variable">$key</span> =&gt; <span class="local-variable">$value</span>) {
      <span class="keyword">if</span> (!<span class="predefined">in_array</span>(<span class="local-variable">$key</span>, <span class="predefined-constant">self</span>::<span class="local-variable">$_whitelist</span>)) {
        <span class="keyword">return</span> <span class="predefined-constant">false</span>;
      }
    }
  }
            
  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">function</span> <span class="function">Process</span>(<span class="local-variable">$data</span>) 
  {
    <span class="keyword">if</span> (!<span class="predefined-constant">self</span>::_CheckIncomingData(<span class="local-variable">$data</span>)) {
      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="predefined-constant">Exception</span>(<span class="string"><span class="delimiter">&quot;</span><span class="content">Unrecognized or no incoming data</span><span class="delimiter">&quot;</span></span>);
    }
                    
    <span class="comment">// process the data</span>
  }
 
  <span class="keyword">if</span> (<span class="constant">GoogleReaderShare</span>::<span class="constant">CheckSource</span>(<span class="predefined">$_SERVER</span>[<span class="string"><span class="delimiter">'</span><span class="content">REMOTE_ADDR</span><span class="delimiter">'</span></span>], <span class="predefined">$_SERVER</span>[<span class="string"><span class="delimiter">'</span><span class="content">HTTP_REFERER</span><span class="delimiter">'</span></span>])) {
    <span class="constant">GoogleReaderShare</span>::<span class="constant">Process</span>(<span class="predefined">$_GET</span>);
  }
</pre></div>
</div>
 </figure></notextile></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Long running PHP script and MySQL server gone away]]></title>
    <link href="http://blog.lenss.nl/2012/10/long-running-php-script-and-mysql-server-gone-away/"/>
    <updated>2012-10-29T14:39:26+01:00</updated>
    <id>http://blog.lenss.nl/2012/10/long-running-php-script-and-mysql-server-gone-away</id>
    <content type="html"><![CDATA[<p>At the moment i am writing some workers that interact with a <a href="http://kr.github.com/beanstalkd/">beanstalk</a> server. When data gets pushed into the beanstalk server. My workers will be triggered to process this data. So the workers are sitting idle for most of the time. And just wait for some data to process. No rocket science there. But during testing i kept running into <a href="http://www.mysql.com/">MySQL</a> issues. The script seemed to lose connection to the MySQL server when it was idle for longer then a minute. And would respond with a </p>

<blockquote>
  <p>Warning: <a href="http://php.net/mysql_query">mysql_query</a>(): MySQL server has gone away in /path/to/some/mysql4/class.php on line xxx</p>
</blockquote>

<p>So whats going on here? Well actually it’s quite simple. When my script initializes the database connection it doesn’t use it. It just sits there waiting for incoming data. Once received it will process it and try to store it in the database. But when the waiting period exceeds the time for PHP to keep the MySQL connection open it responds with the warning mentioned above. Now in previous versions of PHP this would not be a big issue. As PHP would just initiate a reconnect when the connection is lost. But from PHP 5.0.3 and up this functionality has been disabled by default. For MySQLI this is no problem at all. </p>

<p>MySQLi:</p>

<blockquote>
  <p>mysqli.reconnect = Off to On</p>
</blockquote>

<p>Unfortunately i am working with PHP’s core mysql_* functions (don’t get me started) and there doesn’t seem to be an easy way to resolve this. According to the MySQL documentation</p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
mysql_options(&amp;mysql, <span class="constant">MYSQL_OPT_RECONNECT</span>, &amp;reconnect);
</pre></div>
</div>
 </figure></notextile></div>

<p>Should do the trick. But passing <strong>MYSQL_OPT_RECONNECT</strong> in anyway to <a href="http://php.net/mysql_connect">mysql_connect</a> didn’t give me the result i was looking for. So what now? Porting the database code to make use of the newer and better PDO or MySQLi is no option. As it would consume way to much time. Fortunately the mysql_* core functions come with mysql_ping. I never had to use this before. But in this case it comes in quite handy.</p>

<p><strong>From the PHP manual:</strong></p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
<span class="predefined-type">bool</span> mysql_ping ([ <span class="predefined-type">resource</span> <span class="local-variable">$link_identifier</span> = <span class="predefined-constant">NULL</span> ] )
</pre></div>
</div>
 </figure></notextile></div>

<blockquote>
  <p>Checks whether or not the connection to the server is working. If it has gone down, an automatic reconnection is attempted. This function can be used by scripts that remain idle for a long while, to check whether or not the server has closed the connection and reconnect if necessary.</p>
</blockquote>

<p>Note:
<strong>Automatic reconnection is disabled by default in versions of MySQL &gt;= 5.0.3.</strong></p>

<p>Adding the mysql_ping function call was rather straight forward. And didn’t require all that much work to be done. I extended the database class to include a ping method. That would simply throw an exception when it failed to reconnect. </p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header" style="margin-bottom:-5px;"><span>MySQL ping function </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre>
<span class="keyword">public</span> <span class="keyword">function</span> <span class="function">ping</span>()
{
  <span class="keyword">if</span> (!mysql_ping(<span class="local-variable">$this</span>-&gt;db_connect_id)) {
    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="constant">Mollie_Database_Exception</span>(<span class="string"><span class="delimiter">&quot;</span><span class="content">Connection was lost</span><span class="delimiter">&quot;</span></span>);
  }        
  <span class="keyword">return</span> <span class="predefined-constant">true</span>;
}
</pre></div>
</div>
 </figure></notextile></div>

<p>And after that i started poking around the userland implementation. The worker is running inside a <strong>while(true)</strong> loop. A first test with <strong>-&gt;ping()</strong> being called inside this loop proved to resolve the issue at hand. But running the ping function that often is overkill. And who knows it might actually result in <strong>DoS</strong> of the database server. So i decided to ping the server every one minute or so.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header" style="margin-bottom:-5px;"><span>Keep the connection alive </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre>
<span class="local-variable">$start</span> = <span class="predefined">time</span>();
<span class="keyword">while</span> (<span class="predefined-constant">true</span>) 
{
  <span class="local-variable">$this</span>-&gt;_keepConnectionAlive(<span class="local-variable">$start</span>);
}
</pre></div>
</div>
 </figure></notextile></div>

<p>And the keepConnectionAlive method looks something like this</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header" style="margin-bottom:-5px;"><span>keepConnectionAlive method </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre>
<span class="keyword">protected</span> <span class="keyword">function</span> <span class="function">_keepConnectionAlive</span>(&amp;<span class="local-variable">$start</span>)
{
  <span class="local-variable">$passed</span> = (<span class="predefined">time</span>() - <span class="local-variable">$start</span>);
  <span class="keyword">if</span> (<span class="local-variable">$passed</span> &gt; <span class="integer">60</span>)
  {
    <span class="local-variable">$start</span> = <span class="predefined">time</span>();
    <span class="local-variable">$this</span>-&gt;_db-&gt;ping();
  }
}
</pre></div>
</div>
 </figure></notextile></div>

<p>I’m not a big fan of this solution. And would rather be implementing MySQLi functions. But this functions well. And will do for now.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git: Rebase on pull by default]]></title>
    <link href="http://blog.lenss.nl/2012/10/git-rebase-on-pull-by-default/"/>
    <updated>2012-10-25T14:20:22+02:00</updated>
    <id>http://blog.lenss.nl/2012/10/git-rebase-on-pull-by-default</id>
    <content type="html"><![CDATA[<p>I was a bit surprised today when <a href="http://git-scm.com/">git</a> presented me a merge message window after i did a pull. This should not happen as the normal behavior here should be to <a href="http://git-scm.com/book/en/Git-Branching-Rebasing">rebase</a> the changes. But apparently that didn’t happen this time. When i asked one of the other <a href="http://www.scriptorama.nl/">dev</a> ‘s what could be the issue. We quickly figured out i was just missing some <strong>config</strong> entry in <strong>.git/config</strong>. This probably happened some time ago when i did a fresh checkout.</p>

<p>So to make sure rebasing is done by default. You can run a simple git command or modify the <strong>.git/config</strong> file manually.</p>

<p>In git &gt;= 1.7.9</p>

<blockquote>
  <p>git config –global pull.rebase true</p>
</blockquote>

<p>In git &lt; 1.7.9</p>

<blockquote>
  <p>$ git config branch.autosetuprebase always</p>
</blockquote>

<p>or do</p>

<blockquote>
  <p>$ vi .git/config</p>
</blockquote>

<p>Make sure <strong>[branch “master”]</strong> has <strong>rebase</strong> set to true. It should look like the snippet below.</p>

<blockquote><p>[branch &#8220;master&#8221;]<br />  remote = origin<br />  merge = refs/heads/master<br />  rebase = true</p></blockquote>

<p>Starting to really like git. A couple of more quirks and things will be running fine.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Workaround Ubuntu 12.04 mysterious system freezes]]></title>
    <link href="http://blog.lenss.nl/2012/10/workaround-ubuntu-12-04-mysterious-system-freezes/"/>
    <updated>2012-10-12T15:43:46+02:00</updated>
    <id>http://blog.lenss.nl/2012/10/workaround-ubuntu-12-04-mysterious-system-freezes</id>
    <content type="html"><![CDATA[<p>I have two machines running <a href="http://releases.ubuntu.com/12.04/">Ubuntu 12.04</a>. One of them is very stable. And hardly ever gets rebooted. The other machine is displaying some odd behavior every now and then. And with odd behavior i mean. It just completely freezing up. The only thing functioning at that moment is the mouse.</p>

<p>I use this machine daily. And i can’t afford to lose work due to system crashes. So i could spend numerous hours trying to figure out what’s going on. But that’s probably something better left for the Ubuntu devs them selfs. Besides that there are plenty of bug reports floating around that describe this behavior. And one of those <a href="https://bugs.launchpad.net/ubuntu/+source/linux/+bug/999910">posts</a> seemed to resolve the issue for me. </p>

<p>Apparently the bug that causes these crashes is fixed in 12.10. But the changes will only be backported when 12.10 is released. So that leaves me in quite a pickle. But according to the thread. Upgrading the kernel should do the trick. So that’s exactly what i did. The kernel packages i used can be found here <a href="http://kernel.ubuntu.com/~kernel-ppa/mainline/v3.4-precise/">http://kernel.ubuntu.com/~kernel-ppa/mainline/v3.4-precise/</a></p>

<blockquote><p>$ wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v3.4-precise/linux-headers-3.4.0-030400_3.4.0-030400.201205210521_all.deb <br />$ sudo dpkg -i linux-headers-3.4.0-030400_3.4.0-030400.201205210521_all.deb</p></blockquote>

<blockquote><p>$ wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v3.4-precise/linux-headers-3.4.0-030400-generic_3.4.0-030400.201205210521_amd64.deb<br />$ sudo dpkg -i linux-headers-3.4.0-030400-generic_3.4.0-030400.201205210521_amd64.deb</p></blockquote>

<blockquote><p>$ wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v3.4-precise/linux-image-3.4.0-030400-generic_3.4.0-030400.201205210521_amd64.deb<br />$ sudo dpkg -i linux-image-3.4.0-030400-generic_3.4.0-030400.201205210521_amd64.deb</p></blockquote>

<p>This comes with a downside of course. All modules compiled for the current kernel need to be recompiled. And i haven’t figured out how to rebuild all of them at once. So i just ran the command below for <a href="https://www.virtualbox.org/">VirtualBox</a> and the <a href="http://www.nvidia.com">NVidia</a> drivers.</p>

<blockquote><p>$ sudo dpkg-reconfigure package-name</p></blockquote>

<p>It’s probably a better idea to keep the stable kernel for now. But if system crashes are really bugging you. Then this might resolve the issue. Just be careful.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fixing character replacement in Wordpress]]></title>
    <link href="http://blog.lenss.nl/2012/09/fixing-character-replacement-in-wordpress/"/>
    <updated>2012-09-24T21:39:17+02:00</updated>
    <id>http://blog.lenss.nl/2012/09/fixing-character-replacement-in-wordpress</id>
    <content type="html"><![CDATA[<p>This has been bugging me for a while. But not enough to actually look into it. And Google searches for <a href="http://wordpress.org/">Wordpress</a> display wrong characters results in a whole forest of threads about UTF-8 encoding. This has nothing to do with that. So what’s the issue here?</p>

<p>Wordpress is replacing characters in my posts. The most annoying being the replacement of – <del>is</del> with - . Which makes no sense at all. Specially when creating code samples. Or command line parameters. My thought is why on earth would you do that? But it probably has something to do with typography…</p>

<p>Anyways. Searching for it today made me stumble onto <a href="http://blog.paulbetts.org/index.php/2007/06/01/stop-wordpress-from-turning-double-dash-into-long-dash/">this</a> post from 2007 by <a href="http://blog.paulbetts.org/">Paul Betts</a>. And believe it or not. Wordpress is still doing that. The code has changed slightly tough. So i created a quick patch as a temporary solution. And need to figure out if this can be circumvented by a plugin or something. If that doesn’t exists already :)</p>

<p>The patch will replace the following lines</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header" style="margin-bottom:-5px;"><span>Original replacement arrays </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre>
<span class="local-variable">$static_characters</span> = <span class="predefined">array_merge</span>( <span class="predefined">array</span>( <span class="string"><span class="delimiter">'</span><span class="content">---</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content"> -- </span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content">--</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content"> - </span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content">xn-</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content">...</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content">``</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="char">\'</span><span class="char">\'</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content"> (tm)</span><span class="delimiter">'</span></span> ), <span class="local-variable">$cockney</span> );
<span class="local-variable">$static_replacements</span> = <span class="predefined">array_merge</span>( <span class="predefined">array</span>( <span class="local-variable">$em_dash</span>, <span class="string"><span class="delimiter">'</span><span class="content"> </span><span class="delimiter">'</span></span> . <span class="local-variable">$em_dash</span> . <span class="string"><span class="delimiter">'</span><span class="content"> </span><span class="delimiter">'</span></span>, <span class="local-variable">$en_dash</span>, <span class="string"><span class="delimiter">'</span><span class="content"> </span><span class="delimiter">'</span></span> . <span class="local-variable">$en_dash</span> . <span class="string"><span class="delimiter">'</span><span class="content"> </span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content">xn--</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content">…</span><span class="delimiter">'</span></span>, <span class="local-variable">$opening_quote</span>, 
  <span class="local-variable">$closing_quote</span>, <span class="string"><span class="delimiter">'</span><span class="content"> ™</span><span class="delimiter">'</span></span> ), <span class="local-variable">$cockneyreplace</span> 
);
</pre></div>
</div>
 </figure></notextile></div>

<p>With</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header" style="margin-bottom:-5px;"><span>Updated replacement arrays </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre>
<span class="local-variable">$static_characters</span> = <span class="local-variable">$cockney</span>;
<span class="local-variable">$static_replacements</span> = <span class="local-variable">$cockneyreplace</span>;
</pre></div>
</div>
 </figure></notextile></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Resize a Vagrant VMDK drive]]></title>
    <link href="http://blog.lenss.nl/2012/09/resize-a-vagrant-vmdk-drive/"/>
    <updated>2012-09-24T14:17:00+02:00</updated>
    <id>http://blog.lenss.nl/2012/09/resize-a-vagrant-vmdk-drive</id>
    <content type="html"><![CDATA[<p>Using <a href="http://vagrantup.com/">Vagrant</a> as a development environment is great. But you have to watch the available disk space when doing some funky database benchmarking. Last Friday i wrote a script to populate a test database with over 60 million records. And left it running over the weekend. With the idea it would be finished when i returned to the office on Monday. Well it actually was still running. But the Vagrant instance was out of disk space when i logged in. Damn. Should have made sure i had a big disk attached to this instance.</p>

<p>O well. My first idea was to just drop the database that i wanted to use for testing. But due to no space available on the system. I could not drop it. I really couldn’t do anything on the system. Even writing config files failed. So where did all the disk space go?</p>

<blockquote><p>$ df -h<br />Filesystem            Size    Used    Avail    Use%    Mounted on<br />/dev/mapper/debian-605-root    10G    9.8G    0.2G    99%    /</p></blockquote>

<p>That’s really not that much space left. And /var/mysql/ibdata1 for the <a href="http://www.innodb.com/">InnoDB</a> tables was taking up 7 GB. And since i have a couple of InnoDB tables i can’t just delete this file. So need to come up with something else. And after a bit of Googling. I came across <a href="http://jjperezaguinaga.wordpress.com/2012/04/03/a-happy-ending-story-with-vagrant-resizing-a-lucid32-vmdk-box/">this</a> post. Which seemed promising. But the most important part is left out. And instead linked to some horrible garbled page. That is completely unreadable. So i had to do some digging to figure this out on my own. For cloning the disks i followed the steps in the article however. The Virtual Box files are located in the user folder in the following path</p>

<blockquote>
  <p>$ cd ~/VirtualBox VMs/development_*</p>
</blockquote>

<p>The first thing i did was convert the <a href="http://sanbarrow.com/vmdk-handbook.html">VMDK</a> image to a <a href="http://en.wikipedia.org/wiki/VDI_(file_format)">VDI</a> image so we can actually do some partition resizing.</p>

<blockquote>
  <p>$ VBoxManage clonehd box-disk1.vmdk box-disk1.vdi –format VDI</p>
</blockquote>

<p>So now we have a new VDI image. And we need to resize it so it has sufficient space for what we are trying to do. In my case 20 GB is sufficient.</p>

<blockquote>
  <p>$ VBoxManage modifyhd box-disk1.vdi –resize 20000</p>
</blockquote>

<p>Now that the new disk is created it needs to be attached to the vagrant virtual machine. This is easily achieved by doing right click on the VM in <a href="https://www.virtualbox.org/">VirtualBox</a> and select Settings</p>

<blockquote>
  <p>Storage &gt; SATA Controller &gt; Add hard disk (select existing and point to the new VDI image)</p>
</blockquote>

<p>Now boot the Vagrant image in VirtualBox so we have a screen to work with. When it has booted up. Login.</p>

<p>First create a new Primary partition in the unused space of type Linux LVM (8e) with <a href="http://linux.die.net/man/8/cfdisk">cfdisk</a>. </p>

<blockquote>
  <p>$ cfdisk /dev/sda</p>
</blockquote>

<p>When the partition table has been written. It’s time to create a new physical volume on the new partition with the help of <a href="http://linux.about.com/library/cmd/blcmdl8_pvcreate.htm">pvcreate</a></p>

<blockquote><p>$ pvcreate /dev/sda3<br />successfully created</p></blockquote>

<p>For the next steps we will be needing the Volume Group name. We will get this by running <a href="http://linux.about.com/library/cmd/blcmdl8_pvdisplay.htm">pvdisplay</a></p>

<blockquote><p>$ pvdisplay | grep &#8220;VG Name&#8221;<br />VG Name    debian-605</p></blockquote>

<p>So now we have all the bits ready. And its time to extend the root partition with the newly created partition.</p>

<blockquote><p>$ vgextend debian-605 /dev/sda3<br />Volume group &#8220;debian-605&#8221; successfully extended</p></blockquote>

<p>Awesome! next step extending the logical partition</p>

<blockquote><p>$ lvextend /dev/debian-605/root /dev/sda3<br />Extending logical volume root to 18.84 GiB<br />Logical volume root successfully resized</p></blockquote>

<p>Almost there. The last thing left to do is resize the filesystem to make all space available.</p>

<blockquote><p>$ resize2fs /dev/debian-605/root<br />resize2fs 1.41.12 (17-May-2010)<br />Filesystem at /dev/debian-605/root is mounted on /; on-line resizing required old desc_blocks = 1, new_desc_blocks = 2<br />Performing an on-line resize of /dev/debian-605/root to 4937728 (4k) blocks.<br />The filesystem on /dev/debian-605/root is now 4937728 blocks long.</p></blockquote>

<p>It’s that simple really. So let’s check.</p>

<blockquote><p>$ df -h<br />Filesystem            Size    Used    Avail    Use%    Mounted on<br />/dev/mapper/debian-605-root    19G    8.6G    9.1G    49%    /</p></blockquote>

<p>After this i did not bother to convert the VDI image back to a VDMK image. But if you have to for some reason. You could do that with the commands below. And some manual editing of the VirtualBox xml config.</p>

<blockquote><p>$ VBoxManage internalcommands sethduuid box-disk1.vdi<br />$ VBoxManage clonehd box-disk1.vdi box-disk1.vmdk &#8211;format VMDK</p></blockquote>

<p>So that’s it really for resizing the Vagrant hard drive. The only thing left for me was to cleanup the large ibdata1 file. And setup Mysql to use separate ibdata files for InnoDB table.</p>

<blockquote><p>$ vi /etc/mysql/my.cnf<br />[mysqld]<br />innodb_file_per_table</p></blockquote>

<p>Restart Mysql and dump all needed databases except the system tables like (mysql, information_schema).</p>

<blockquote><p>$ /etc/init.d/mysql restart<br />$ echo &#8216;show databases;&#8217; | mysql -uroot -p | grep -v ^Database$ | grep -v ^information_schema$ | grep -v ^mysql$ | xargs mysqldump -uroot -p  &#8211;databases &gt; dump.sql</p></blockquote>

<p>When that’s done. Drop all InnoDB database tables. Remove the ibdata and in_log files from /var/lib/mysql.</p>

<blockquote><p>$ /etc/init.d/mysql stop<br />$ rm /var/mysql/ibdata1* /var/mysql/ib_log*</p></blockquote>

<p>Now we restart Mysql. And reimport the databases.</p>

<blockquote><p>$ /etc/init.d/mysql start<br />$ mysql -uroot -p &lt; dump.sql</p></blockquote>

<ul>
  <li>Some of the resources i used for solving this issue:</li>
  <li>[1] <a href="http://www.turnkeylinux.org/blog/extending-lvm">http://www.turnkeylinux.org/blog/extending-lvm</a></li>
  <li>[2] <a href="http://unix.stackexchange.com/questions/37900/gparted-live-cd-cant-resize-a-partition">http://unix.stackexchange.com/questions/37900/gparted-live-cd-cant-resize-a-partition</a></li>
  <li>[3] <a href="http://www.my-guides.net/en/guides/general-software/122-how-to-resize-a-virtualbox-disk-partition">http://www.my-guides.net/en/guides/general-software/122-how-to-resize-a-virtualbox-disk-partition</a></li>
  <li>[4] <a href="http://www.virtualbox.org/manual/ch08.html#vboxmanage-modifyvdi">http://www.virtualbox.org/manual/ch08.html#vboxmanage-modifyvdi</a></li>
  <li>[5] <a href="http://stackoverflow.com/questions/3456159/how-to-shrink-purge-ibdata1-file-in-mysql">http://stackoverflow.com/questions/3456159/how-to-shrink-purge-ibdata1-file-in-mysql</a></li>
</ul>
]]></content>
  </entry>
  
</feed>
