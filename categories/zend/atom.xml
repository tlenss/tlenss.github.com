<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Zend | Thijs Lensselink's Blog]]></title>
  <link href="http://tlenss.github.com/categories/zend/atom.xml" rel="self"/>
  <link href="http://tlenss.github.com/"/>
  <updated>2012-11-15T21:45:00+01:00</updated>
  <id>http://tlenss.github.com/</id>
  <author>
    <name><![CDATA[Thijs Lensselink]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Long running PHP script and MySQL server gone away]]></title>
    <link href="http://tlenss.github.com/2012/10/29/long-running-php-script-and-mysql-server-gone-away/"/>
    <updated>2012-10-29T14:39:26+01:00</updated>
    <id>http://tlenss.github.com/2012/10/29/long-running-php-script-and-mysql-server-gone-away</id>
    <content type="html"><![CDATA[<p>At the moment i am writing some workers that interact with a <a href="http://kr.github.com/beanstalkd/">beanstalk</a> server. When data gets pushed into the beanstalk server. My workers will be triggered to process this data. So the workers are sitting idle for most of the time. And just wait for some data to process. No rocket science there. But during testing i kept running into <a href="http://www.mysql.com/">MySQL</a> issues. The script seemed to lose connection to the MySQL server when it was idle for longer then a minute. And would respond with a</p>

<blockquote><p>Warning: <a href="http://php.net/mysql_query">mysql_query</a>(): MySQL server has gone away in /path/to/some/mysql4/class.php on line xxx</p></blockquote>

<p>So whats going on here? Well actually it's quite simple. When my script initializes the database connection it doesn't use it. It just sits there waiting for incoming data. Once received it will process it and try to store it in the database. But when the waiting period exceeds the time for PHP to keep the MySQL connection open it responds with the warning mentioned above. Now in previous versions of PHP this would not be a big issue. As PHP would just initiate a reconnect when the connection is lost. But from PHP 5.0.3 and up this functionality has been disabled by default. For MySQLI this is no problem at all.</p>

<p>MySQLi:</p>

<blockquote><p>mysqli.reconnect = Off to On</p></blockquote>

<p>Unfortunately i am working with PHP's core mysql_* functions (don't get me started) and there doesn't seem to be an easy way to resolve this. According to the MySQL documentation</p>

<pre><code>mysql_options(&amp;mysql;, MYSQL_OPT_RECONNECT, &amp;reconnect;);
</code></pre>

<p>Should do the trick. But passing <strong>MYSQL_OPT_RECONNECT</strong> in anyway to <a href="http://php.net/mysql_connect">mysql_connect</a> didn't result in the result i was looking for. So what now? Porting the database code to make use of the newer and better PDO or MySQLi is no option. As it would consume way to much time. Fortunately the mysql_* core functions come with mysql_ping. I never had to use this before. But in this case it comes in quite handy.</p>

<p><strong>From the PHP manual:</strong></p>

<pre><code>bool mysql_ping ([ resource $link_identifier = NULL ] )
</code></pre>

<blockquote><p>Checks whether or not the connection to the server is working. If it has gone down, an automatic reconnection is attempted. This function can be used by scripts that remain idle for a long while, to check whether or not the server has closed the connection and reconnect if necessary.</p></blockquote>

<p>Note:
<strong>Automatic reconnection is disabled by default in versions of MySQL >= 5.0.3.</strong></p>

<p>Adding the mysql_ping function call was rather straight forward. And didn't require all that much work to be done. I extended the database class to include a ping method. That would simply throw an exception when it failed to reconnect.</p>

<pre><code>public function ping()
{
    if (!mysql_ping($this-&gt;db_connect_id)) {
        throw new Mollie_Database_Exception("Connection was lost");
    }   
    return true;
}
</code></pre>

<p>And after that i started poking around the userland implementation. The worker is running inside a <strong>while(true)</strong> loop. A first test with <strong>->ping()</strong> being called inside this loop proved to resolve the issue at hand. But running the ping function that often is overkill. And who knows it might actually result in <strong>DoS</strong> of the database server. So i decided to ping the server every one minute or so.</p>

<pre><code>$start = time();
while (true) 
{
    $this-&gt;_keepConnectionAlive($start);
</code></pre>

<p>And the keepConnectionAlive method looks something like this</p>

<pre><code>protected function _keepConnectionAlive(&amp;$start)
{
    $passed = (time() - $start);
    if ($passed &gt; 60)
    {
        $start = time();
        $this-&gt;_db-&gt;ping();
    }
}
</code></pre>

<p>I'm not a big fan of this solution. And would rather be implementing MySQLi functions. But this functions well. And will do for now.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using SSH key authentication with EGit in ZendStudio]]></title>
    <link href="http://tlenss.github.com/2012/02/28/using-ssh-key-authentication-with-egit-in-zendstudio/"/>
    <updated>2012-02-28T16:17:19+01:00</updated>
    <id>http://tlenss.github.com/2012/02/28/using-ssh-key-authentication-with-egit-in-zendstudio</id>
    <content type="html"><![CDATA[<p>For the past few months i have been switching some projects over to <a href="http://git-scm.com/">git</a> from <a href="http://subversion.tigris.org/">Subversion</a>. And have been trying to get the hang of all the command line options available. And i will be doing that for a while longer until i get completely comfortable. And for communication to the remote git server i have been using SSH key authentication. Which works smoothly just like it did with Subversion.</p>

<p>But i wanted to check out the GIT support available in <a href="http://www.zend.com/products/studio/">Zend Studio 9</a>. And hit a problem pretty quickly. But i will describe that below. First i will create a local clone of my git project.</p>

<blockquote><p>$ git clone ssh://[somehost]/~/git/project.git</p></blockquote>

<p>To test if everything is working i do a test commit. If that succeeds if push it out to the remote master.</p>

<blockquote><p>$ cd project.git
$ touch TEST
$ git commit
$ git push origin master</p></blockquote>

<p>So that works fine. Now time to see how Zen Studio handles this. To create a project i use the <strong>Create from Git</strong> option. And select the local checkout i just created. This will read the whole repository configuration. And you are basically done from here. But as i mentioned earlier, i had some difficulties getting things running smoothly. I discovered that when it was time to push changes to the master repository.</p>

<p>When i used the <strong>Push to Upstream</strong> option. I was greeted by a login panel that seemed to have selected the correct SSH key and user to perform the login. But when i typed the password, it just kept asking for the password. Again and again. Hmm. That sucks! The password was correct. I tried with a newly created key. No luck either. The last thing i tried was updating to a nightly build of <a href="http://www.eclipse.org/egit/">Egit</a> found <a href="http://www.eclipse.org/egit/download/">here</a>. But this offered no solution either.</p>

<p>After reading a couple of complaints i found this <a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=326526">bug</a> report for the EGit eclipse plugin. The thread contains a solution for the login issue i was having. Gotta love Google!</p>

<p>Apparently the problem has to do with the encryption algorithm used to create the SSH keys. In this case the EGit plugin (which uses <a href="http://www.jcraft.com/jsch/">Jsch</a> to do the SSH communication) was having problems with <a href="http://en.wikipedia.org/wiki/Advanced_Encryption_Standard">AES</a> encrypted keys. And to solve the problem the Jsch library should be replaced with a newer version to make things work again.</p>

<p>So lets download this JSch library and update it manually. The library (JSch v 0.1.46) can be found <a href="http://www.jcraft.com/jsch/">here</a>.</p>

<blockquote><p>$ cd ZendStudio9
$ find . -name '<em>jsch</em>' -type f</p></blockquote>

<p>Found it <strong>plugins/com.jcraft.jsch_0.1.41.v201101211617.jar</strong>. So let's try to update that.</p>

<blockquote><p>$ cp plugins/com.jcraft.jsch_0.1.41.v201101211617.jar plugins/com.jcraft.jsch_0.1.41.v201101211617.jar.backup
$ wget http://sourceforge.net/projects/jsch/files/jsch.jar/0.1.46/jsch-0.1.46.jar/download
$ mv jsch-0.1.46.jar plugins/com.jcraft.jsch_0.1.41.v201101211617.jar</p></blockquote>

<p>After restarting ZS everything worked fine again. Another problem solved! Thanks to the guys who posted in the EGit bug thread. Some good community Karma here! Time for other things. Hope it helps!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP getting strict sessions]]></title>
    <link href="http://tlenss.github.com/2011/11/30/php-getting-strict-sessions/"/>
    <updated>2011-11-30T15:38:28+01:00</updated>
    <id>http://tlenss.github.com/2011/11/30/php-getting-strict-sessions</id>
    <content type="html"><![CDATA[<p>For years <a href="http://php.net/">PHP</a> has been vulnerable to session adoption which can enable <a href="http://en.wikipedia.org/wiki/Session_fixation">session fixation</a>. And since sessions are a major part of web applications now a days. A lot of platforms are open and waiting for an attack to happen.</p>

<p><strong>session adoption &amp; session fixation</strong></p>

<p>The problem exists because the current session module does not validate the session id that comes in from a cookie. This means uninitialized session id's can be passed by the client. This happens due to the fact that browsers overwrite cookie if multiple cookies are send per request.
Some people would say this is solvable by implementing <a href="http://nl3.php.net/manual/en/function.session-regenerate-id.php">session_regenerate_id()</a>. But this is not the case.</p>

<p>Because session fixation can be used to take over control of web applications. Validation is required when multiple cookies are send per request. When multiple cookie are send with a request. Browsers send multiple cookies without domain / path information. This way it's impossible to tell which cookie belongs to which domain.</p>

<p><strong>So how do we fix this?</strong></p>

<p>There is some userland code that does offer the ability to validate session data. But this has not been widely adopted by other developers.</p>

<p>Code that adds the session ID as a validation key:</p>

<pre><code>session_destory();
session_regenerate_id();
$_SESSION['valid_id'] = session_id(); 
</code></pre>

<p>And the code to check if the session was properly initialized:</p>

<pre><code>if ($_SESSION['valid_id'] !== session_id()) {
  die('Invalid use of session ID');
}
</code></pre>

<p>Thank god the internal developer know this. And are working to fix this. For the past days there has been an interesting discussion going on on the <a href="http://news.php.net/php.internals">internals</a> list. About applying a patch that will fix this. The patch will add some new php.ini features and a new method validate_id() for the session save handler. Hopefully this will be available in version 5.4.</p>

<p>To not break BC strict_mode will be disabled by default. But can be enabled by setting the following setting in php.ini. When enabled uninitialized session ID will be discarded.</p>

<blockquote><p>session.use_strict_mode=0</p></blockquote>

<p>To prevent a DoS instead of session fixation. An new feature has been added that deletes possible malicious cookies that prevent new session ID.</p>

<blockquote><p>session.safe_session_cookie=1</p></blockquote>

<p>You can read more about session fixation and the upcoming patch on the <a href="https://wiki.php.net/rfc/strict_sessions">PHP-Wiki</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP5 filesize limit on 32-bit system]]></title>
    <link href="http://tlenss.github.com/2011/08/31/php5-filesize-limit-on-32-bit-system/"/>
    <updated>2011-08-31T01:38:00+02:00</updated>
    <id>http://tlenss.github.com/2011/08/31/php5-filesize-limit-on-32-bit-system</id>
    <content type="html"><![CDATA[<p>So we have a PHP based importer script that does some heavy duty media processing at the office. And i had to import some new media today. But for some reason a couple of files weren't picked up without a message. So i cleaned up the upload folder. The only files left were the files not being processed. And when i started the importer. The result was.</p>

<blockquote><p>Importer found (0) files to import!</p></blockquote>

<p>Hmmm. That's not right. So i had a look at the code behind the importer. Which basically is a loop using a <a href="http://nl2.php.net/manual/en/class.directoryiterator.php">DirectoryIterator</a> object. And some var_dump calls revealed the issue. For some reason <a href="http://nl2.php.net/manual/en/splfileinfo.isfile.php">->isFile()</a> was returning <em>(false)</em> for regular files. WTF! Let's test that on the command line.</p>

<blockquote><p>$ php -r "var_dump(is_file('/some/file.ext'));";
<em>bool(false)</em></p></blockquote>

<p>Ok so we have an issue here. How big are these files really. A inspection revealed they are all over 2GB. Maybe some 32 bit issue? As the platform the code is running on is a 32 bit server. So i asked my colleagues, Googled a bit and read through php.net. To find out that there is an issue with PHP and files larger then 2GB.</p>

<blockquote><p><a href="https://bugs.php.net/bug.php?id=27792">https://bugs.php.net/bug.php?id=27792</a>
<a href="https://bugs.php.net/bug.php?id=48886">https://bugs.php.net/bug.php?id=48886</a>
<a href="http://nl.php.net/manual/en/function.filesize.php">http://nl.php.net/manual/en/function.filesize.php</a></p></blockquote>

<p>Those however all seem related to filesize. The filesize function manual page even has a note about it. Maybe it's related?</p>

<blockquote><p>   <strong>Note:</strong> Because PHP's integer type is signed and many platforms use 32bit integers, <strong>filesize() </strong> may return unexpected results for files which are larger than <strong>2GB</strong>. For files between 2GB and 4GB in size this can usually be overcome by using <strong>sprintf("%u", filesize($file))</strong>.</p></blockquote>

<p>But i can't apply that patch on a production server. So i came up with a simple solution for now. I extended the <a href="http://nl2.php.net/manual/en/class.directoryiterator.php">DirectoryIterator</a> class and have overwritten the <em>isFile</em> method. Which works for now (don't think this will work on windows).</p>

<pre><code>Class MyDirectoryIterator extends DirectoryIterator {
    public function isFile() {
        return (integer) exec("[ -f {$this-&gt;getPathname()} ] &amp;&amp; echo 1 || echo 0");
    }
}
</code></pre>

<p>Convinced it was a 32 bit issue. I came home later that day. And wanted to try it out on my own desktop. That is a 32 bit system and runs Ubuntu 11.04. To my surprise the result was different then i expected.</p>

<blockquote><p>$ php -r "var_dump(is_file('/some/file.ext'));";
<em>bool(true)</em></p></blockquote>

<p>I used the same files as before. And tested some more big files. But the result was the same. Weird. Let's try some other 32 bit machines.</p>

<blockquote><p>Ubuntu 11.04: bool(true)</p></blockquote>

<p>CentOS release 5.6 (Final): bool(false)
Debian 6.0.2 (squeeze): bool(false)</p>

<p>Only my desktop at home seems to have a good result. Ubuntu must have some patch somewhere to fix this issue? To confirm i compiled PHP 5.3.8 from source. And did the same test again on Ubuntu 11.04. And this time it was <em>(false)</em>.</p>

<blockquote><p>$ php -r "var_dump(is_file('/some/file.ext'));";
<em>bool(false)</em></p></blockquote>

<p>I am not really in the mood to search the Ubuntu <a href="http://changelogs.ubuntu.com/changelogs/pool/main/p/php5/">changelog</a>. And for now the work around will do. But i really would like to know what patch is applied to resolve the issue.</p>

<p><strong>[ update ]</strong></p>

<p>While applying the patch for the is_file issue. I was confronted with the fact that way more function calls cause issues. So while waiting for PHP to get patched i had to create some workarounds for the time being.</p>

<p>Getting the filesize:</p>

<pre><code>(integer) exec("stat -c%s {$file-&gt;getFilename()}");
</code></pre>

<p>Calculate a MD5 checksum:</p>

<pre><code>$md5 = exec("md5sum {$file-&gt;getFilename()}");
$expl = explode('\t', $md5);
return (string) $expl[0];
</code></pre>

<p>Calculate the CRC32 checksum:</p>

<pre><code>$hash = exec("cksum {$this-&gt;path}");
$expl = explode(' ', $hash);
return $expl[0];
</code></pre>

<p>Get the modified time:</p>

<pre><code>$stat = explode('.', exec("stat -c%y {$this-&gt;path}"));
$timestamp = strtotime($stat[0]);
return $timestamp;
</code></pre>

<p>Hopefully that will do for now. On a side note the issue is solvable by setting certain <strong>CFLAGS</strong> when compiling PHP. I have no idea what the impact of that will be on the PHP binary. But it does seem to solve the issue. Not sure how one would apply that when PHP is installed from the distro's repository though.</p>

<blockquote><p>CFLAGS="-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64" ./configure</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VMware Workstation Listen to voice of the customer]]></title>
    <link href="http://tlenss.github.com/2011/03/15/vmware-workstation-listen-to-voice-of-the-customer/"/>
    <updated>2011-03-15T23:37:27+01:00</updated>
    <id>http://tlenss.github.com/2011/03/15/vmware-workstation-listen-to-voice-of-the-customer</id>
    <content type="html"><![CDATA[<p><a href="http://www.zend.com/en/products/studio/vmware-workstation-deployment"><img src="http://lenss.nl/images/2011/03/zend-vmware.gif" alt="" /></a>A while back i was contacted by <a href="http://twitter.com/vlaxmi">Vijay Laxmi</a>. Vijay is a Sr Partner Marketing Manager over at Zend Technologies. And she was interested in doing a podcast like interview about the brand new and shiny <a href="http://www.zend.com/en/products/studio/vmware-workstation-deployment">VMWare &amp; Zend Studio</a> integration. And because i am a big fan of this feature. I didn't see why not. So we had a few chat sessions. Along the way <a href="http://twitter.com/jsolomin">Joshua Solomin</a> from Zend and Michael Paiko from VMWare joined the party. And after some preparation we recorded the session. Considering i have never been much of a speaker. This was quite fun to do.</p>

<p>Michael send me the end result. And everybody seemed happy with it. After that life resumed and i have been incredibly busy every since. So i kinda forgot about the whole thing. Till Vijay mailed me today (ty! Vijay). VMWare put the <a href="http://blogs.vmware.com/workstation/">recording</a> on their website. And a customer mailing has been transmitted over the wire.  Cool stuff!</p>

<p><a href="http://lenss.nl/images/2011/03/2011-02-07-VMware-Zend-VOC-Podcast.mp3">2011-02-07 VMware-Zend VOC Podcast</a></p>
]]></content>
  </entry>
  
</feed>
